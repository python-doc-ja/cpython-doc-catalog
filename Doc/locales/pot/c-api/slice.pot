# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2019, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-01 15:21+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../c-api/slice.rst:6
msgid "Slice Objects"
msgstr ""

#: ../../c-api/slice.rst:13
msgid "The type object for slice objects.  This is the same as ``slice`` and ``types.SliceType``."
msgstr ""

#: ../../c-api/slice.rst:19
msgid "Return true if *ob* is a slice object; *ob* must not be *NULL*."
msgstr ""

#: ../../c-api/slice.rst:24
msgid "Return a new slice object with the given values.  The *start*, *stop*, and *step* parameters are used as the values of the slice object attributes of the same names.  Any of the values may be *NULL*, in which case the ``None`` will be used for the corresponding attribute.  Return *NULL* if the new object could not be allocated."
msgstr ""

#: ../../c-api/slice.rst:33
msgid "Retrieve the start, stop and step indices from the slice object *slice*, assuming a sequence of length *length*. Treats indices greater than *length* as errors."
msgstr ""

#: ../../c-api/slice.rst:37
msgid "Returns ``0`` on success and ``-1`` on error with no exception set (unless one of the indices was not :const:`None` and failed to be converted to an integer, in which case ``-1`` is returned with an exception set)."
msgstr ""

#: ../../c-api/slice.rst:41
msgid "You probably do not want to use this function.  If you want to use slice objects in versions of Python prior to 2.3, you would probably do well to incorporate the source of :c:func:`PySlice_GetIndicesEx`, suitably renamed, in the source of your extension."
msgstr ""

#: ../../c-api/slice.rst:46
msgid "This function used an :c:type:`int` type for *length* and an :c:type:`int *` type for *start*, *stop*, and *step*. This might require changes in your code for properly supporting 64-bit systems."
msgstr ""

#: ../../c-api/slice.rst:54
msgid "Usable replacement for :c:func:`PySlice_GetIndices`.  Retrieve the start, stop, and step indices from the slice object *slice* assuming a sequence of length *length*, and store the length of the slice in *slicelength*.  Out of bounds indices are clipped in a manner consistent with the handling of normal slices."
msgstr ""

#: ../../c-api/slice.rst:60
msgid "Returns ``0`` on success and ``-1`` on error with exception set."
msgstr ""

#: ../../c-api/slice.rst:64
msgid "This function used an :c:type:`int` type for *length* and an :c:type:`int *` type for *start*, *stop*, *step*, and *slicelength*. This might require changes in your code for properly supporting 64-bit systems."
msgstr ""

#: ../../c-api/slice.rst:72
msgid "Ellipsis Object"
msgstr ""

#: ../../c-api/slice.rst:77
msgid "The Python ``Ellipsis`` object.  This object has no methods.  It needs to be treated just like any other object with respect to reference counts.  Like :c:data:`Py_None` it is a singleton object."
msgstr ""

