# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-01 04:28+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:2
msgid ":mod:`subprocess` --- Subprocess management"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:10
msgid "**Source code:** :source:`Lib/subprocess.py`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:14
msgid "The :mod:`subprocess` module allows you to spawn new processes, connect to their input/output/error pipes, and obtain their return codes.  This module intends to replace several older modules and functions::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:21
msgid "Information about how the :mod:`subprocess` module can be used to replace these modules and functions can be found in the following sections."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:26
msgid ":pep:`324` -- PEP proposing the subprocess module"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:30
msgid "Using the :mod:`subprocess` Module"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:32
msgid "The recommended approach to invoking subprocesses is to use the :func:`run` function for all use cases it can handle. For more advanced use cases, the underlying :class:`Popen` interface can be used directly."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:36
msgid "The :func:`run` function was added in Python 3.5; if you need to retain compatibility with older versions, see the :ref:`call-function-trio` section."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:45
msgid "Run the command described by *args*.  Wait for command to complete, then return a :class:`CompletedProcess` instance."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:48
msgid "The arguments shown above are merely the most common ones, described below in :ref:`frequently-used-arguments` (hence the use of keyword-only notation in the abbreviated signature). The full function signature is largely the same as that of the :class:`Popen` constructor - most of the arguments to this function are passed through to that interface. (*timeout*,  *input*, *check*, and *capture_output* are not.)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:55
msgid "If *capture_output* is true, stdout and stderr will be captured. When used, the internal :class:`Popen` object is automatically created with ``stdout=PIPE`` and ``stderr=PIPE``. The *stdout* and *stderr* arguments may not be supplied at the same time as *capture_output*.  If you wish to capture and combine both streams into one, use ``stdout=PIPE`` and ``stderr=STDOUT`` instead of *capture_output*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:62
msgid "The *timeout* argument is passed to :meth:`Popen.communicate`. If the timeout expires, the child process will be killed and waited for.  The :exc:`TimeoutExpired` exception will be re-raised after the child process has terminated."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:67
msgid "The *input* argument is passed to :meth:`Popen.communicate` and thus to the subprocess's stdin.  If used it must be a byte sequence, or a string if *encoding* or *errors* is specified or *text* is true.  When used, the internal :class:`Popen` object is automatically created with ``stdin=PIPE``, and the *stdin* argument may not be used as well."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:73
msgid "If *check* is true, and the process exits with a non-zero exit code, a :exc:`CalledProcessError` exception will be raised. Attributes of that exception hold the arguments, the exit code, and stdout and stderr if they were captured."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:78
msgid "If *encoding* or *errors* are specified, or *text* is true, file objects for stdin, stdout and stderr are opened in text mode using the specified *encoding* and *errors* or the :class:`io.TextIOWrapper` default. The *universal_newlines* argument is equivalent  to *text* and is provided for backwards compatibility. By default, file objects are opened in binary mode."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:84
msgid "If *env* is not ``None``, it must be a mapping that defines the environment variables for the new process; these are used instead of the default behavior of inheriting the current process' environment. It is passed directly to :class:`Popen`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:89
msgid "Examples::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:107
msgid "Added *encoding* and *errors* parameters"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:111
msgid "Added the *text* parameter, as a more understandable alias of *universal_newlines*. Added the *capture_output* parameter."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:116
msgid "The return value from :func:`run`, representing a process that has finished."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:120
msgid "The arguments used to launch the process. This may be a list or a string."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:124
msgid "Exit status of the child process. Typically, an exit status of 0 indicates that it ran successfully."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:127
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:778
msgid "A negative value ``-N`` indicates that the child was terminated by signal ``N`` (POSIX only)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:132
msgid "Captured stdout from the child process. A bytes sequence, or a string if :func:`run` was called with an encoding, errors, or text=True. ``None`` if stdout was not captured."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:136
msgid "If you ran the process with ``stderr=subprocess.STDOUT``, stdout and stderr will be combined in this attribute, and :attr:`stderr` will be ``None``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:142
msgid "Captured stderr from the child process. A bytes sequence, or a string if :func:`run` was called with an encoding, errors, or text=True. ``None`` if stderr was not captured."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:148
msgid "If :attr:`returncode` is non-zero, raise a :exc:`CalledProcessError`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:154
msgid "Special value that can be used as the *stdin*, *stdout* or *stderr* argument to :class:`Popen` and indicates that the special file :data:`os.devnull` will be used."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:163
msgid "Special value that can be used as the *stdin*, *stdout* or *stderr* argument to :class:`Popen` and indicates that a pipe to the standard stream should be opened.  Most useful with :meth:`Popen.communicate`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:170
msgid "Special value that can be used as the *stderr* argument to :class:`Popen` and indicates that standard error should go into the same handle as standard output."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:177
msgid "Base class for all other exceptions from this module."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:184
msgid "Subclass of :exc:`SubprocessError`, raised when a timeout expires while waiting for a child process."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:189
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:226
msgid "Command that was used to spawn the child process."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:193
msgid "Timeout in seconds."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:197
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:230
msgid "Output of the child process if it was captured by :func:`run` or :func:`check_output`.  Otherwise, ``None``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:202
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:235
msgid "Alias for output, for symmetry with :attr:`stderr`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:206
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:239
msgid "Stderr output of the child process if it was captured by :func:`run`. Otherwise, ``None``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:211
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:242
msgid "*stdout* and *stderr* attributes added"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:216
msgid "Subclass of :exc:`SubprocessError`, raised when a process run by :func:`check_call` or :func:`check_output` returns a non-zero exit status."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:221
msgid "Exit status of the child process.  If the process exited due to a signal, this will be the negative signal number."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:249
msgid "Frequently Used Arguments"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:251
msgid "To support a wide variety of use cases, the :class:`Popen` constructor (and the convenience functions) accept a large number of optional arguments. For most typical use cases, many of these arguments can be safely left at their default values. The arguments that are most commonly needed are:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:256
msgid "*args* is required for all calls and should be a string, or a sequence of program arguments. Providing a sequence of arguments is generally preferred, as it allows the module to take care of any required escaping and quoting of arguments (e.g. to permit spaces in file names). If passing a single string, either *shell* must be :const:`True` (see below) or else the string must simply name the program to be executed without specifying any arguments."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:264
msgid "*stdin*, *stdout* and *stderr* specify the executed program's standard input, standard output and standard error file handles, respectively.  Valid values are :data:`PIPE`, :data:`DEVNULL`, an existing file descriptor (a positive integer), an existing file object, and ``None``.  :data:`PIPE` indicates that a new pipe to the child should be created.  :data:`DEVNULL` indicates that the special file :data:`os.devnull` will be used.  With the default settings of ``None``, no redirection will occur; the child's file handles will be inherited from the parent.  Additionally, *stderr* can be :data:`STDOUT`, which indicates that the stderr data from the child process should be captured into the same file handle as for *stdout*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:278
msgid "If *encoding* or *errors* are specified, or *text* (also known as *universal_newlines*) is true, the file objects *stdin*, *stdout* and *stderr* will be opened in text mode using the *encoding* and *errors* specified in the call or the defaults for :class:`io.TextIOWrapper`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:284
msgid "For *stdin*, line ending characters ``'\\n'`` in the input will be converted to the default line separator :data:`os.linesep`. For *stdout* and *stderr*, all line endings in the output will be converted to ``'\\n'``.  For more information see the documentation of the :class:`io.TextIOWrapper` class when the *newline* argument to its constructor is ``None``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:290
msgid "If text mode is not used, *stdin*, *stdout* and *stderr* will be opened as binary streams. No encoding or line ending conversion is performed."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:293
msgid "Added *encoding* and *errors* parameters."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:296
msgid "Added the *text* parameter as an alias for *universal_newlines*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:301
msgid "The newlines attribute of the file objects :attr:`Popen.stdin`, :attr:`Popen.stdout` and :attr:`Popen.stderr` are not updated by the :meth:`Popen.communicate` method."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:305
msgid "If *shell* is ``True``, the specified command will be executed through the shell.  This can be useful if you are using Python primarily for the enhanced control flow it offers over most system shells and still want convenient access to other shell features such as shell pipes, filename wildcards, environment variable expansion, and expansion of ``~`` to a user's home directory.  However, note that Python itself offers implementations of many shell-like features (in particular, :mod:`glob`, :mod:`fnmatch`, :func:`os.walk`, :func:`os.path.expandvars`, :func:`os.path.expanduser`, and :mod:`shutil`)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:315
msgid "When *universal_newlines* is ``True``, the class uses the encoding :func:`locale.getpreferredencoding(False) <locale.getpreferredencoding>` instead of ``locale.getpreferredencoding()``.  See the :class:`io.TextIOWrapper` class for more information on this change."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:323
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:407
msgid "Read the `Security Considerations`_ section before using ``shell=True``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:325
msgid "These options, along with all of the other options, are described in more detail in the :class:`Popen` constructor documentation."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:330
msgid "Popen Constructor"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:332
msgid "The underlying process creation and management in this module is handled by the :class:`Popen` class. It offers a lot of flexibility so that developers are able to handle the less common cases not covered by the convenience functions."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:345
msgid "Execute a child program in a new process.  On POSIX, the class uses :meth:`os.execvp`-like behavior to execute the child program.  On Windows, the class uses the Windows ``CreateProcess()`` function.  The arguments to :class:`Popen` are as follows."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:350
msgid "*args* should be a sequence of program arguments or else a single string. By default, the program to execute is the first item in *args* if *args* is a sequence.  If *args* is a string, the interpretation is platform-dependent and described below.  See the *shell* and *executable* arguments for additional differences from the default behavior.  Unless otherwise stated, it is recommended to pass *args* as a sequence."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:357
msgid "On POSIX, if *args* is a string, the string is interpreted as the name or path of the program to execute.  However, this can only be done if not passing arguments to the program."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:363
msgid ":meth:`shlex.split` can be useful when determining the correct tokenization for *args*, especially in complex cases::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:374
msgid "Note in particular that options (such as *-input*) and arguments (such as *eggs.txt*) that are separated by whitespace in the shell go in separate list elements, while arguments that need quoting or backslash escaping when used in the shell (such as filenames containing spaces or the *echo* command shown above) are single list elements."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:380
msgid "On Windows, if *args* is a sequence, it will be converted to a string in a manner described in :ref:`converting-argument-sequence`.  This is because the underlying ``CreateProcess()`` operates on strings."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:384
msgid "The *shell* argument (which defaults to ``False``) specifies whether to use the shell as the program to execute.  If *shell* is ``True``, it is recommended to pass *args* as a string rather than as a sequence."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:388
msgid "On POSIX with ``shell=True``, the shell defaults to :file:`/bin/sh`.  If *args* is a string, the string specifies the command to execute through the shell.  This means that the string must be formatted exactly as it would be when typed at the shell prompt.  This includes, for example, quoting or backslash escaping filenames with spaces in them.  If *args* is a sequence, the first item specifies the command string, and any additional items will be treated as additional arguments to the shell itself.  That is to say, :class:`Popen` does the equivalent of::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:399
msgid "On Windows with ``shell=True``, the :envvar:`COMSPEC` environment variable specifies the default shell.  The only time you need to specify ``shell=True`` on Windows is when the command you wish to execute is built into the shell (e.g. :command:`dir` or :command:`copy`).  You do not need ``shell=True`` to run a batch file or console-based executable."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:409
msgid "*bufsize* will be supplied as the corresponding argument to the :func:`open` function when creating the stdin/stdout/stderr pipe file objects:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:413
msgid ":const:`0` means unbuffered (read and write are one system call and can return short)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:415
msgid ":const:`1` means line buffered (only usable if ``universal_newlines=True`` i.e., in a text mode)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:417
msgid "any other positive value means use a buffer of approximately that size"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:419
msgid "negative bufsize (the default) means the system default of io.DEFAULT_BUFFER_SIZE will be used."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:422
msgid "*bufsize* now defaults to -1 to enable buffering by default to match the behavior that most code expects.  In versions prior to Python 3.2.4 and 3.3.1 it incorrectly defaulted to :const:`0` which was unbuffered and allowed short reads.  This was unintentional and did not match the behavior of Python 2 as most code expected."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:429
msgid "The *executable* argument specifies a replacement program to execute.   It is very seldom needed.  When ``shell=False``, *executable* replaces the program to execute specified by *args*.  However, the original *args* is still passed to the program.  Most programs treat the program specified by *args* as the command name, which can then be different from the program actually executed.  On POSIX, the *args* name becomes the display name for the executable in utilities such as :program:`ps`.  If ``shell=True``, on POSIX the *executable* argument specifies a replacement shell for the default :file:`/bin/sh`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:439
msgid "*stdin*, *stdout* and *stderr* specify the executed program's standard input, standard output and standard error file handles, respectively.  Valid values are :data:`PIPE`, :data:`DEVNULL`, an existing file descriptor (a positive integer), an existing :term:`file object`, and ``None``.  :data:`PIPE` indicates that a new pipe to the child should be created.  :data:`DEVNULL` indicates that the special file :data:`os.devnull` will be used. With the default settings of ``None``, no redirection will occur; the child's file handles will be inherited from the parent.  Additionally, *stderr* can be :data:`STDOUT`, which indicates that the stderr data from the applications should be captured into the same file handle as for stdout."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:450
msgid "If *preexec_fn* is set to a callable object, this object will be called in the child process just before the child is executed. (POSIX only)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:456
msgid "The *preexec_fn* parameter is not safe to use in the presence of threads in your application.  The child process could deadlock before exec is called. If you must use it, keep it trivial!  Minimize the number of libraries you call into."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:464
msgid "If you need to modify the environment for the child use the *env* parameter rather than doing it in a *preexec_fn*. The *start_new_session* parameter can take the place of a previously common use of *preexec_fn* to call os.setsid() in the child."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:469
msgid "If *close_fds* is true, all file descriptors except :const:`0`, :const:`1` and :const:`2` will be closed before the child process is executed.  Otherwise when *close_fds* is false, file descriptors obey their inheritable flag as described in :ref:`fd_inheritance`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:474
msgid "On Windows, if *close_fds* is true then no handles will be inherited by the child process unless explicitly passed in the ``handle_list`` element of :attr:`STARTUPINFO.lpAttributeList`, or by standard handle redirection."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:478
msgid "The default for *close_fds* was changed from :const:`False` to what is described above."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:482
msgid "On Windows the default for *close_fds* was changed from :const:`False` to :const:`True` when redirecting the standard handles. It's now possible to set *close_fds* to :const:`True` when redirecting the standard handles."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:487
msgid "*pass_fds* is an optional sequence of file descriptors to keep open between the parent and child.  Providing any *pass_fds* forces *close_fds* to be :const:`True`.  (POSIX only)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:491
msgid "The *pass_fds* parameter was added."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:494
msgid "If *cwd* is not ``None``, the function changes the working directory to *cwd* before executing the child.  *cwd* can be a :class:`str` and :term:`path-like <path-like object>` object.  In particular, the function looks for *executable* (or for the first item in *args*) relative to *cwd* if the executable path is a relative path."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:500
msgid "*cwd* parameter accepts a :term:`path-like object`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:503
msgid "If *restore_signals* is true (the default) all signals that Python has set to SIG_IGN are restored to SIG_DFL in the child process before the exec. Currently this includes the SIGPIPE, SIGXFZ and SIGXFSZ signals. (POSIX only)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:508
msgid "*restore_signals* was added."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:511
msgid "If *start_new_session* is true the setsid() system call will be made in the child process prior to the execution of the subprocess.  (POSIX only)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:514
msgid "*start_new_session* was added."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:517
msgid "If *env* is not ``None``, it must be a mapping that defines the environment variables for the new process; these are used instead of the default behavior of inheriting the current process' environment."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:523
msgid "If specified, *env* must provide any variables required for the program to execute.  On Windows, in order to run a `side-by-side assembly`_ the specified *env* **must** include a valid :envvar:`SystemRoot`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:529
msgid "If *encoding* or *errors* are specified, or *text* is true, the file objects *stdin*, *stdout* and *stderr* are opened in text mode with the specified encoding and *errors*, as described above in :ref:`frequently-used-arguments`. The *universal_newlines* argument is equivalent  to *text* and is provided for backwards compatibility. By default, file objects are opened in binary mode."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:535
msgid "*encoding* and *errors* were added."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:538
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1106
msgid "*text* was added as a more readable alias for *universal_newlines*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:541
msgid "If given, *startupinfo* will be a :class:`STARTUPINFO` object, which is passed to the underlying ``CreateProcess`` function. *creationflags*, if given, can be one or more of the following flags:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:545
msgid ":data:`CREATE_NEW_CONSOLE`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:546
msgid ":data:`CREATE_NEW_PROCESS_GROUP`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:547
msgid ":data:`ABOVE_NORMAL_PRIORITY_CLASS`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:548
msgid ":data:`BELOW_NORMAL_PRIORITY_CLASS`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:549
msgid ":data:`HIGH_PRIORITY_CLASS`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:550
msgid ":data:`IDLE_PRIORITY_CLASS`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:551
msgid ":data:`NORMAL_PRIORITY_CLASS`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:552
msgid ":data:`REALTIME_PRIORITY_CLASS`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:553
msgid ":data:`CREATE_NO_WINDOW`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:554
msgid ":data:`DETACHED_PROCESS`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:555
msgid ":data:`CREATE_DEFAULT_ERROR_MODE`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:556
msgid ":data:`CREATE_BREAKAWAY_FROM_JOB`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:558
msgid "Popen objects are supported as context managers via the :keyword:`with` statement: on exit, standard file descriptors are closed, and the process is waited for. ::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:565
msgid "Added context manager support."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:568
msgid "Popen destructor now emits a :exc:`ResourceWarning` warning if the child process is still running."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:574
msgid "Exceptions"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:576
msgid "Exceptions raised in the child process, before the new program has started to execute, will be re-raised in the parent."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:579
msgid "The most common exception raised is :exc:`OSError`.  This occurs, for example, when trying to execute a non-existent file.  Applications should prepare for :exc:`OSError` exceptions."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:583
msgid "A :exc:`ValueError` will be raised if :class:`Popen` is called with invalid arguments."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:586
msgid ":func:`check_call` and :func:`check_output` will raise :exc:`CalledProcessError` if the called process returns a non-zero return code."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:590
msgid "All of the functions and methods that accept a *timeout* parameter, such as :func:`call` and :meth:`Popen.communicate` will raise :exc:`TimeoutExpired` if the timeout expires before the process exits."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:594
msgid "Exceptions defined in this module all inherit from :exc:`SubprocessError`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:596
msgid "The :exc:`SubprocessError` base class was added."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:601
msgid "Security Considerations"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:603
msgid "Unlike some other popen functions, this implementation will never implicitly call a system shell.  This means that all characters, including shell metacharacters, can safely be passed to child processes. If the shell is invoked explicitly, via ``shell=True``, it is the application's responsibility to ensure that all whitespace and metacharacters are quoted appropriately to avoid `shell injection <https://en.wikipedia.org/wiki/Shell_injection#Shell_injection>`_ vulnerabilities."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:612
msgid "When using ``shell=True``, the :func:`shlex.quote` function can be used to properly escape whitespace and shell metacharacters in strings that are going to be used to construct shell commands."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:618
msgid "Popen Objects"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:620
msgid "Instances of the :class:`Popen` class have the following methods:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:625
msgid "Check if child process has terminated.  Set and return :attr:`~Popen.returncode` attribute. Otherwise, returns ``None``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:631
msgid "Wait for child process to terminate.  Set and return :attr:`~Popen.returncode` attribute."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:634
msgid "If the process does not terminate after *timeout* seconds, raise a :exc:`TimeoutExpired` exception.  It is safe to catch this exception and retry the wait."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:640
msgid "This will deadlock when using ``stdout=PIPE`` or ``stderr=PIPE`` and the child process generates enough output to a pipe such that it blocks waiting for the OS pipe buffer to accept more data. Use :meth:`Popen.communicate` when using pipes to avoid that."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:647
msgid "The function is implemented using a busy loop (non-blocking call and short sleeps). Use the :mod:`asyncio` module for an asynchronous wait: see :class:`asyncio.create_subprocess_exec`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:651
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:691
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1025
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1053
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1097
msgid "*timeout* was added."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:656
msgid "Interact with process: Send data to stdin.  Read data from stdout and stderr, until end-of-file is reached.  Wait for process to terminate.  The optional *input* argument should be data to be sent to the child process, or ``None``, if no data should be sent to the child.  If streams were opened in text mode, *input* must be a string.  Otherwise, it must be bytes."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:662
msgid ":meth:`communicate` returns a tuple ``(stdout_data, stderr_data)``. The data will be strings if streams were opened in text mode; otherwise, bytes."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:666
msgid "Note that if you want to send data to the process's stdin, you need to create the Popen object with ``stdin=PIPE``.  Similarly, to get anything other than ``None`` in the result tuple, you need to give ``stdout=PIPE`` and/or ``stderr=PIPE`` too."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:671
msgid "If the process does not terminate after *timeout* seconds, a :exc:`TimeoutExpired` exception will be raised.  Catching this exception and retrying communication will not lose any output."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:675
msgid "The child process is not killed if the timeout expires, so in order to cleanup properly a well-behaved application should kill the child process and finish communication::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:688
msgid "The data read is buffered in memory, so do not use this method if the data size is large or unlimited."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:697
msgid "Sends the signal *signal* to the child."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:701
msgid "On Windows, SIGTERM is an alias for :meth:`terminate`. CTRL_C_EVENT and CTRL_BREAK_EVENT can be sent to processes started with a *creationflags* parameter which includes `CREATE_NEW_PROCESS_GROUP`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:708
msgid "Stop the child. On Posix OSs the method sends SIGTERM to the child. On Windows the Win32 API function :c:func:`TerminateProcess` is called to stop the child."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:715
msgid "Kills the child. On Posix OSs the function sends SIGKILL to the child. On Windows :meth:`kill` is an alias for :meth:`terminate`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:719
msgid "The following attributes are also available:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:723
msgid "The *args* argument as it was passed to :class:`Popen` -- a sequence of program arguments or else a single string."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:730
msgid "If the *stdin* argument was :data:`PIPE`, this attribute is a writeable stream object as returned by :func:`open`. If the *encoding* or *errors* arguments were specified or the *universal_newlines* argument was ``True``, the stream is a text stream, otherwise it is a byte stream. If the *stdin* argument was not :data:`PIPE`, this attribute is ``None``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:739
msgid "If the *stdout* argument was :data:`PIPE`, this attribute is a readable stream object as returned by :func:`open`. Reading from the stream provides output from the child process. If the *encoding* or *errors* arguments were specified or the *universal_newlines* argument was ``True``, the stream is a text stream, otherwise it is a byte stream. If the *stdout* argument was not :data:`PIPE`, this attribute is ``None``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:749
msgid "If the *stderr* argument was :data:`PIPE`, this attribute is a readable stream object as returned by :func:`open`. Reading from the stream provides error output from the child process. If the *encoding* or *errors* arguments were specified or the *universal_newlines* argument was ``True``, the stream is a text stream, otherwise it is a byte stream. If the *stderr* argument was not :data:`PIPE`, this attribute is ``None``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:758
msgid "Use :meth:`~Popen.communicate` rather than :attr:`.stdin.write <Popen.stdin>`, :attr:`.stdout.read <Popen.stdout>` or :attr:`.stderr.read <Popen.stderr>` to avoid deadlocks due to any of the other OS pipe buffers filling up and blocking the child process."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:766
msgid "The process ID of the child process."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:768
msgid "Note that if you set the *shell* argument to ``True``, this is the process ID of the spawned shell."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:774
msgid "The child return code, set by :meth:`poll` and :meth:`wait` (and indirectly by :meth:`communicate`).  A ``None`` value indicates that the process hasn't terminated yet."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:783
msgid "Windows Popen Helpers"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:785
msgid "The :class:`STARTUPINFO` class and following constants are only available on Windows."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:791
msgid "Partial support of the Windows `STARTUPINFO <https://msdn.microsoft.com/en-us/library/ms686331(v=vs.85).aspx>`__ structure is used for :class:`Popen` creation.  The following attributes can be set by passing them as keyword-only arguments."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:796
msgid "Keyword-only argument support was added."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:801
msgid "A bit field that determines whether certain :class:`STARTUPINFO` attributes are used when the process creates a window. ::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:809
msgid "If :attr:`dwFlags` specifies :data:`STARTF_USESTDHANDLES`, this attribute is the standard input handle for the process. If :data:`STARTF_USESTDHANDLES` is not specified, the default for standard input is the keyboard buffer."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:816
msgid "If :attr:`dwFlags` specifies :data:`STARTF_USESTDHANDLES`, this attribute is the standard output handle for the process. Otherwise, this attribute is ignored and the default for standard output is the console window's buffer."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:823
msgid "If :attr:`dwFlags` specifies :data:`STARTF_USESTDHANDLES`, this attribute is the standard error handle for the process. Otherwise, this attribute is ignored and the default for standard error is the console window's buffer."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:829
msgid "If :attr:`dwFlags` specifies :data:`STARTF_USESHOWWINDOW`, this attribute can be any of the values that can be specified in the ``nCmdShow`` parameter for the `ShowWindow <https://msdn.microsoft.com/en-us/library/ms633548(v=vs.85).aspx>`__ function, except for ``SW_SHOWDEFAULT``. Otherwise, this attribute is ignored."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:836
msgid ":data:`SW_HIDE` is provided for this attribute. It is used when :class:`Popen` is called with ``shell=True``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:841
msgid "A dictionary of additional attributes for process creation as given in ``STARTUPINFOEX``, see `UpdateProcThreadAttribute <https://msdn.microsoft.com/en-us/library/windows/desktop/ms686880(v=vs.85).aspx>`__."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:845
msgid "Supported attributes:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:863
msgid "**handle_list**"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:848
msgid "Sequence of handles that will be inherited. *close_fds* must be true if non-empty."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:851
msgid "The handles must be temporarily made inheritable by :func:`os.set_handle_inheritable` when passed to the :class:`Popen` constructor, else :class:`OSError` will be raised with Windows error ``ERROR_INVALID_PARAMETER`` (87)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:858
msgid "In a multithreaded process, use caution to avoid leaking handles that are marked inheritable when combining this feature with concurrent calls to other process creation functions that inherit all handles such as :func:`os.system`.  This also applies to standard handle redirection, which temporarily creates inheritable handles."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:868
msgid "Windows Constants"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:870
msgid "The :mod:`subprocess` module exposes the following constants."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:874
msgid "The standard input device. Initially, this is the console input buffer, ``CONIN$``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:879
msgid "The standard output device. Initially, this is the active console screen buffer, ``CONOUT$``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:884
msgid "The standard error device. Initially, this is the active console screen buffer, ``CONOUT$``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:889
msgid "Hides the window. Another window will be activated."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:893
msgid "Specifies that the :attr:`STARTUPINFO.hStdInput`, :attr:`STARTUPINFO.hStdOutput`, and :attr:`STARTUPINFO.hStdError` attributes contain additional information."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:899
msgid "Specifies that the :attr:`STARTUPINFO.wShowWindow` attribute contains additional information."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:904
msgid "The new process has a new console, instead of inheriting its parent's console (the default)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:909
msgid "A :class:`Popen` ``creationflags`` parameter to specify that a new process group will be created. This flag is necessary for using :func:`os.kill` on the subprocess."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:913
msgid "This flag is ignored if :data:`CREATE_NEW_CONSOLE` is specified."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:917
msgid "A :class:`Popen` ``creationflags`` parameter to specify that a new process will have an above average priority."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:924
msgid "A :class:`Popen` ``creationflags`` parameter to specify that a new process will have a below average priority."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:931
msgid "A :class:`Popen` ``creationflags`` parameter to specify that a new process will have a high priority."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:938
msgid "A :class:`Popen` ``creationflags`` parameter to specify that a new process will have an idle (lowest) priority."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:945
msgid "A :class:`Popen` ``creationflags`` parameter to specify that a new process will have an normal priority. (default)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:952
msgid "A :class:`Popen` ``creationflags`` parameter to specify that a new process will have realtime priority. You should almost never use REALTIME_PRIORITY_CLASS, because this interrupts system threads that manage mouse input, keyboard input, and background disk flushing. This class can be appropriate for applications that \"talk\" directly to hardware or that perform brief tasks that should have limited interruptions."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:963
msgid "A :class:`Popen` ``creationflags`` parameter to specify that a new process will not create a window."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:970
msgid "A :class:`Popen` ``creationflags`` parameter to specify that a new process will not inherit its parent's console. This value cannot be used with CREATE_NEW_CONSOLE."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:978
msgid "A :class:`Popen` ``creationflags`` parameter to specify that a new process does not inherit the error mode of the calling process. Instead, the new process gets the default error mode. This feature is particularly useful for multithreaded shell applications that run with hard errors disabled."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:988
msgid "A :class:`Popen` ``creationflags`` parameter to specify that a new process is not associated with the job."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:996
msgid "Older high-level API"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:998
msgid "Prior to Python 3.5, these three functions comprised the high level API to subprocess. You can now use :func:`run` in many cases, but lots of existing code calls these functions."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1004
msgid "Run the command described by *args*.  Wait for command to complete, then return the :attr:`~Popen.returncode` attribute."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1007
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1035
msgid "Code needing to capture stdout or stderr should use :func:`run` instead:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1009
msgid "run(...).returncode"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1011
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1039
msgid "To suppress stdout or stderr, supply a value of :data:`DEVNULL`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1013
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1041
msgid "The arguments shown above are merely some common ones. The full function signature is the same as that of the :class:`Popen` constructor - this function passes all supplied arguments other than *timeout* directly through to that interface."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1020
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1048
msgid "Do not use ``stdout=PIPE`` or ``stderr=PIPE`` with this function.  The child process will block if it generates enough output to a pipe to fill up the OS pipe buffer as the pipes are not being read from."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1030
msgid "Run command with arguments.  Wait for command to complete. If the return code was zero then return, otherwise raise :exc:`CalledProcessError`. The :exc:`CalledProcessError` object will have the return code in the :attr:`~CalledProcessError.returncode` attribute."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1037
msgid "run(..., check=True)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1061
msgid "Run command with arguments and return its output."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1063
msgid "If the return code was non-zero it raises a :exc:`CalledProcessError`. The :exc:`CalledProcessError` object will have the return code in the :attr:`~CalledProcessError.returncode` attribute and any output in the :attr:`~CalledProcessError.output` attribute."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1068
msgid "This is equivalent to::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1072
msgid "The arguments shown above are merely some common ones. The full function signature is largely the same as that of :func:`run` - most arguments are passed directly through to that interface. However, explicitly passing ``input=None`` to inherit the parent's standard input file handle is not supported."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1078
msgid "By default, this function will return the data as encoded bytes. The actual encoding of the output data may depend on the command being invoked, so the decoding to text will often need to be handled at the application level."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1082
msgid "This behaviour may be overridden by setting *text*, *encoding*, *errors*, or *universal_newlines* to ``True`` as described in :ref:`frequently-used-arguments` and :func:`run`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1086
msgid "To also capture standard error in the result, use ``stderr=subprocess.STDOUT``::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1100
msgid "Support for the *input* keyword argument was added."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1103
msgid "*encoding* and *errors* were added.  See :func:`run` for details."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1113
msgid "Replacing Older Functions with the :mod:`subprocess` Module"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1115
msgid "In this section, \"a becomes b\" means that b can be used as a replacement for a."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1119
msgid "All \"a\" functions in this section fail (more or less) silently if the executed program cannot be found; the \"b\" replacements raise :exc:`OSError` instead."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1123
msgid "In addition, the replacements using :func:`check_output` will fail with a :exc:`CalledProcessError` if the requested operation produces a non-zero return code. The output is still available as the :attr:`~CalledProcessError.output` attribute of the raised exception."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1128
msgid "In the following examples, we assume that the relevant functions have already been imported from the :mod:`subprocess` module."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1133
msgid "Replacing /bin/sh shell backquote"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1139
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1150
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1167
msgid "becomes::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1144
msgid "Replacing shell pipeline"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1157
msgid "The p1.stdout.close() call after starting the p2 is important in order for p1 to receive a SIGPIPE if p2 exits before p1."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1160
msgid "Alternatively, for trusted input, the shell's own pipeline support may still be used directly:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1173
msgid "Replacing :func:`os.system`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1181
msgid "Notes:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1183
msgid "Calling the program through the shell is usually not required."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1185
msgid "A more realistic example would look like this::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1198
msgid "Replacing the :func:`os.spawn <os.spawnl>` family"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1200
msgid "P_NOWAIT example::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1206
msgid "P_WAIT example::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1212
msgid "Vector example::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1218
msgid "Environment example::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1227
msgid "Replacing :func:`os.popen`, :func:`os.popen2`, :func:`os.popen3`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1257
msgid "Return code handling translates as follows::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1273
msgid "Replacing functions from the :mod:`popen2` module"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1277
msgid "If the cmd argument to popen2 functions is a string, the command is executed through /bin/sh.  If it is a list, the command is directly executed."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1296
msgid ":class:`popen2.Popen3` and :class:`popen2.Popen4` basically work as :class:`subprocess.Popen`, except that:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1299
msgid ":class:`Popen` raises an exception if the execution fails."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1301
msgid "The *capturestderr* argument is replaced with the *stderr* argument."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1303
msgid "``stdin=PIPE`` and ``stdout=PIPE`` must be specified."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1305
msgid "popen2 closes all file descriptors by default, but you have to specify ``close_fds=True`` with :class:`Popen` to guarantee this behavior on all platforms or past Python versions."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1311
msgid "Legacy Shell Invocation Functions"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1313
msgid "This module also provides the following legacy functions from the 2.x ``commands`` module. These operations implicitly invoke the system shell and none of the guarantees described above regarding security and exception handling consistency are valid for these functions."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1320
msgid "Return ``(exitcode, output)`` of executing *cmd* in a shell."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1322
msgid "Execute the string *cmd* in a shell with :meth:`Popen.check_output` and return a 2-tuple ``(exitcode, output)``. The locale encoding is used; see the notes on :ref:`frequently-used-arguments` for more details."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1326
msgid "A trailing newline is stripped from the output. The exit code for the command can be interpreted as the return code of subprocess.  Example::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1340
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1360
msgid ":ref:`Availability <availability>`: POSIX & Windows."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1341
msgid "Windows support was added."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1344
msgid "The function now returns (exitcode, output) instead of (status, output) as it did in Python 3.3.3 and earlier.  exitcode has the same value as :attr:`~Popen.returncode`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1351
msgid "Return output (stdout and stderr) of executing *cmd* in a shell."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1353
msgid "Like :func:`getstatusoutput`, except the exit code is ignored and the return value is a string containing the command's output.  Example::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1361
msgid "Windows support added"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1366
msgid "Notes"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1371
msgid "Converting an argument sequence to a string on Windows"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1373
msgid "On Windows, an *args* sequence is converted to a string that can be parsed using the following rules (which correspond to the rules used by the MS C runtime):"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1377
msgid "Arguments are delimited by white space, which is either a space or a tab."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1380
msgid "A string surrounded by double quotation marks is interpreted as a single argument, regardless of white space contained within.  A quoted string can be embedded in an argument."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1385
msgid "A double quotation mark preceded by a backslash is interpreted as a literal double quotation mark."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1388
msgid "Backslashes are interpreted literally, unless they immediately precede a double quotation mark."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1391
msgid "If backslashes immediately precede a double quotation mark, every pair of backslashes is interpreted as a literal backslash.  If the number of backslashes is odd, the last backslash escapes the next double quotation mark as described in rule 3."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1400
msgid ":mod:`shlex`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/subprocess.rst:1401
msgid "Module which provides function to parse and escape command lines."
msgstr ""
