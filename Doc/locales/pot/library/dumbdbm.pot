# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2019, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-16 18:23+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:2
msgid ":mod:`dumbdbm` --- Portable DBM implementation"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:8
msgid "The :mod:`dumbdbm` module has been renamed to :mod:`dbm.dumb` in Python 3. The :term:`2to3` tool will automatically adapt imports when converting your sources to Python 3."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:16
msgid "The :mod:`dumbdbm` module is intended as a last resort fallback for the :mod:`anydbm` module when no more robust module is available. The :mod:`dumbdbm` module is not written for speed and is not nearly as heavily used as the other database modules."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:21
msgid "The :mod:`dumbdbm` module provides a persistent dictionary-like interface which is written entirely in Python.  Unlike other modules such as :mod:`gdbm` and :mod:`bsddb`, no external library is required.  As with other persistent mappings, the keys and values must always be strings."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:26
msgid "The module defines the following:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:31
msgid "Raised on dumbdbm-specific errors, such as I/O errors.  :exc:`KeyError` is raised for general mapping errors like specifying an incorrect key."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:37
msgid "Open a dumbdbm database and return a dumbdbm object.  The *filename* argument is the basename of the database file (without any specific extensions).  When a dumbdbm database is created, files with :file:`.dat` and :file:`.dir` extensions are created."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:42
msgid "The optional *flag* argument is currently ignored; the database is always opened for update, and will be created if it does not exist."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:45
msgid "The optional *mode* argument is the Unix mode of the file, used only when the database has to be created.  It defaults to octal ``0666`` (and will be modified by the prevailing umask)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:49
msgid "The *mode* argument was ignored in earlier versions."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:52
msgid "In addition to the dictionary-like methods, ``dumbdm`` objects provide the following method:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:58
msgid "Close the ``dumbdm`` database."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:64
msgid "Module :mod:`anydbm`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:64
msgid "Generic interface to ``dbm``\\ -style databases."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:67
msgid "Module :mod:`dbm`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:67
msgid "Similar interface to the DBM/NDBM library."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:70
msgid "Module :mod:`gdbm`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:70
msgid "Similar interface to the GNU GDBM library."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:73
msgid "Module :mod:`shelve`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:73
msgid "Persistence module which stores non-string data."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:75
msgid "Module :mod:`whichdb`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:76
msgid "Utility module used to determine the type of an existing database."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:82
msgid "Dumbdbm Objects"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:84
msgid "In addition to the methods provided by the :class:`UserDict.DictMixin` class, :class:`~dumbdbm.dumbdbm` objects provide the following methods."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dumbdbm.rst:90
msgid "Synchronize the on-disk directory and data files.  This method is called by the :meth:`sync` method of :class:`Shelve` objects."
msgstr ""
