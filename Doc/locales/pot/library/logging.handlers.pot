# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-01 18:32+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:2
msgid ":mod:`logging.handlers` --- Logging handlers"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:13
msgid "This page contains only reference information. For tutorials, please see"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:16
msgid ":ref:`Basic Tutorial <logging-basic-tutorial>`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:17
msgid ":ref:`Advanced Tutorial <logging-advanced-tutorial>`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:18
msgid ":ref:`Logging Cookbook <logging-cookbook>`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:20
msgid "**Source code:** :source:`Lib/logging/handlers.py`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:26
msgid "The following useful handlers are provided in the package. Note that three of the handlers (:class:`StreamHandler`, :class:`FileHandler` and :class:`NullHandler`) are actually defined in the :mod:`logging` module itself, but have been documented here along with the other handlers."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:34
msgid "StreamHandler"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:36
msgid "The :class:`StreamHandler` class, located in the core :mod:`logging` package, sends logging output to streams such as *sys.stdout*, *sys.stderr* or any file-like object (or, more precisely, any object which supports :meth:`write` and :meth:`flush` methods)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:44
msgid "Returns a new instance of the :class:`StreamHandler` class. If *stream* is specified, the instance will use it for logging output; otherwise, *sys.stderr* will be used."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:51
msgid "If a formatter is specified, it is used to format the record. The record is then written to the stream with a newline terminator. If exception information is present, it is formatted using :func:`traceback.print_exception` and appended to the stream."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:59
msgid "Flushes the stream by calling its :meth:`flush` method. Note that the :meth:`close` method is inherited from :class:`~logging.Handler` and so does no output, so an explicit :meth:`flush` call may be needed at times."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:66
msgid "FileHandler"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:68
msgid "The :class:`FileHandler` class, located in the core :mod:`logging` package, sends logging output to a disk file.  It inherits the output functionality from :class:`StreamHandler`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:75
msgid "Returns a new instance of the :class:`FileHandler` class. The specified file is opened and used as the stream for logging. If *mode* is not specified, :const:`'a'` is used.  If *encoding* is not ``None``, it is used to open the file with that encoding.  If *delay* is true, then file opening is deferred until the first call to :meth:`emit`. By default, the file grows indefinitely."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:81
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:199
msgid "*delay* was added."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:86
msgid "Closes the file."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:91
msgid "Outputs the record to the file."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:97
msgid "NullHandler"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:101
msgid "The :class:`NullHandler` class, located in the core :mod:`logging` package, does not do any formatting or output. It is essentially a 'no-op' handler for use by library developers."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:107
msgid "Returns a new instance of the :class:`NullHandler` class."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:111
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:115
msgid "This method does nothing."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:119
msgid "This method returns ``None`` for the lock, since there is no underlying I/O to which access needs to be serialized."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:123
msgid "See :ref:`library-config` for more information on how to use :class:`NullHandler`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:129
msgid "WatchedFileHandler"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:135
msgid "The :class:`WatchedFileHandler` class, located in the :mod:`logging.handlers` module, is a :class:`FileHandler` which watches the file it is logging to. If the file changes, it is closed and reopened using the file name."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:139
msgid "A file change can happen because of usage of programs such as *newsyslog* and *logrotate* which perform log file rotation. This handler, intended for use under Unix/Linux, watches the file to see if it has changed since the last emit. (A file is deemed to have changed if its device or inode have changed.) If the file has changed, the old file stream is closed, and the file opened to get a new stream."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:146
msgid "This handler is not appropriate for use under Windows, because under Windows open log files cannot be moved or renamed - logging opens the files with exclusive locks - and so there is no need for such a handler. Furthermore, *ST_INO* is not supported under Windows; :func:`~os.stat` always returns zero for this value."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:155
msgid "Returns a new instance of the :class:`WatchedFileHandler` class. The specified file is opened and used as the stream for logging. If *mode* is not specified, :const:`'a'` is used.  If *encoding* is not ``None``, it is used to open the file with that encoding.  If *delay* is true, then file opening is deferred until the first call to :meth:`emit`.  By default, the file grows indefinitely."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:164
msgid "Outputs the record to the file, but first checks to see if the file has changed.  If it has, the existing stream is flushed and closed and the file opened again, before outputting the record to the file."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:171
msgid "RotatingFileHandler"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:173
msgid "The :class:`RotatingFileHandler` class, located in the :mod:`logging.handlers` module, supports rotation of disk log files."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:179
msgid "Returns a new instance of the :class:`RotatingFileHandler` class. The specified file is opened and used as the stream for logging. If *mode* is not specified, ``'a'`` is used.  If *encoding* is not ``None``, it is used to open the file with that encoding.  If *delay* is true, then file opening is deferred until the first call to :meth:`emit`.  By default, the file grows indefinitely."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:185
msgid "You can use the *maxBytes* and *backupCount* values to allow the file to :dfn:`rollover` at a predetermined size. When the size is about to be exceeded, the file is closed and a new file is silently opened for output. Rollover occurs whenever the current log file is nearly *maxBytes* in length; if either of *maxBytes* or *backupCount* is zero, rollover never occurs.  If *backupCount* is non-zero, the system will save old log files by appending the extensions '.1', '.2' etc., to the filename. For example, with a *backupCount* of 5 and a base file name of :file:`app.log`, you would get :file:`app.log`, :file:`app.log.1`, :file:`app.log.2`, up to :file:`app.log.5`. The file being written to is always :file:`app.log`.  When this file is filled, it is closed and renamed to :file:`app.log.1`, and if files :file:`app.log.1`, :file:`app.log.2`, etc.  exist, then they are renamed to :file:`app.log.2`, :file:`app.log.3` etc.  respectively."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:205
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:279
msgid "Does a rollover, as described above."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:210
msgid "Outputs the record to the file, catering for rollover as described previously."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:216
msgid "TimedRotatingFileHandler"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:218
msgid "The :class:`TimedRotatingFileHandler` class, located in the :mod:`logging.handlers` module, supports rotation of disk log files at certain timed intervals."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:225
msgid "Returns a new instance of the :class:`TimedRotatingFileHandler` class. The specified file is opened and used as the stream for logging. On rotating it also sets the filename suffix. Rotating happens based on the product of *when* and *interval*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:230
msgid "You can use the *when* to specify the type of *interval*. The list of possible values is below.  Note that they are not case sensitive."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:234
msgid "Value"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:234
msgid "Type of interval"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:236
msgid "``'S'``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:236
msgid "Seconds"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:238
msgid "``'M'``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:238
msgid "Minutes"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:240
msgid "``'H'``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:240
msgid "Hours"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:242
msgid "``'D'``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:242
msgid "Days"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:244
msgid "``'W0'-'W6'``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:244
msgid "Weekday (0=Monday)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:246
msgid "``'midnight'``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:246
msgid "Roll over at midnight"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:249
msgid "When using weekday-based rotation, specify 'W0' for Monday, 'W1' for Tuesday, and so on up to 'W6' for Sunday. In this case, the value passed for *interval* isn't used."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:253
msgid "The system will save old log files by appending extensions to the filename. The extensions are date-and-time based, using the strftime format ``%Y-%m-%d_%H-%M-%S`` or a leading portion thereof, depending on the rollover interval."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:258
msgid "When computing the next rollover time for the first time (when the handler is created), the last modification time of an existing log file, or else the current time, is used to compute when the next rotation will occur."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:262
msgid "If the *utc* argument is true, times in UTC will be used; otherwise local time is used."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:265
msgid "If *backupCount* is nonzero, at most *backupCount* files will be kept, and if more would be created when rollover occurs, the oldest one is deleted. The deletion logic uses the interval to determine which files to delete, so changing the interval may leave old files lying around."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:270
msgid "If *delay* is true, then file opening is deferred until the first call to :meth:`emit`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:273
msgid "*delay* and *utc* were added."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:284
msgid "Outputs the record to the file, catering for rollover as described above."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:290
msgid "SocketHandler"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:292
msgid "The :class:`SocketHandler` class, located in the :mod:`logging.handlers` module, sends logging output to a network socket. The base class uses a TCP socket."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:298
msgid "Returns a new instance of the :class:`SocketHandler` class intended to communicate with a remote machine whose address is given by *host* and *port*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:304
msgid "Closes the socket."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:309
msgid "Pickles the record's attribute dictionary and writes it to the socket in binary format. If there is an error with the socket, silently drops the packet. If the connection was previously lost, re-establishes the connection. To unpickle the record at the receiving end into a :class:`~logging.LogRecord`, use the :func:`~logging.makeLogRecord` function."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:319
msgid "Handles an error which has occurred during :meth:`emit`. The most likely cause is a lost connection. Closes the socket so that we can retry on the next event."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:326
msgid "This is a factory method which allows subclasses to define the precise type of socket they want. The default implementation creates a TCP socket (:const:`socket.SOCK_STREAM`)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:333
msgid "Pickles the record's attribute dictionary in binary format with a length prefix, and returns it ready for transmission across the socket."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:336
msgid "Note that pickles aren't completely secure. If you are concerned about security, you may want to override this method to implement a more secure mechanism. For example, you can sign pickles using HMAC and then verify them on the receiving end, or alternatively you can disable unpickling of global objects on the receiving end."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:345
msgid "Send a pickled string *packet* to the socket. This function allows for partial sends which can happen when the network is busy."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:351
msgid "Tries to create a socket; on failure, uses an exponential back-off algorithm.  On initial failure, the handler will drop the message it was trying to send.  When subsequent messages are handled by the same instance, it will not try connecting until some time has passed.  The default parameters are such that the initial delay is one second, and if after that delay the connection still can't be made, the handler will double the delay each time up to a maximum of 30 seconds."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:359
msgid "This behaviour is controlled by the following handler attributes:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:361
msgid "``retryStart`` (initial delay, defaulting to 1.0 seconds)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:362
msgid "``retryFactor`` (multiplier, defaulting to 2.0)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:363
msgid "``retryMax`` (maximum delay, defaulting to 30.0 seconds)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:365
msgid "This means that if the remote listener starts up *after* the handler has been used, you could lose messages (since the handler won't even attempt a connection until the delay has elapsed, but just silently drop messages during the delay period)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:374
msgid "DatagramHandler"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:376
msgid "The :class:`DatagramHandler` class, located in the :mod:`logging.handlers` module, inherits from :class:`SocketHandler` to support sending logging messages over UDP sockets."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:383
msgid "Returns a new instance of the :class:`DatagramHandler` class intended to communicate with a remote machine whose address is given by *host* and *port*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:389
msgid "Pickles the record's attribute dictionary and writes it to the socket in binary format. If there is an error with the socket, silently drops the packet. To unpickle the record at the receiving end into a :class:`~logging.LogRecord`, use the :func:`~logging.makeLogRecord` function."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:398
msgid "The factory method of :class:`SocketHandler` is here overridden to create a UDP socket (:const:`socket.SOCK_DGRAM`)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:404
msgid "Send a pickled string to a socket."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:410
msgid "SysLogHandler"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:412
msgid "The :class:`SysLogHandler` class, located in the :mod:`logging.handlers` module, supports sending logging messages to a remote or local Unix syslog."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:418
msgid "Returns a new instance of the :class:`SysLogHandler` class intended to communicate with a remote Unix machine whose address is given by *address* in the form of a ``(host, port)`` tuple.  If *address* is not specified, ``('localhost', 514)`` is used.  The address is used to open a socket.  An alternative to providing a ``(host, port)`` tuple is providing an address as a string, for example '/dev/log'. In this case, a Unix domain socket is used to send the message to the syslog. If *facility* is not specified, :const:`LOG_USER` is used. The type of socket opened depends on the *socktype* argument, which defaults to :const:`socket.SOCK_DGRAM` and thus opens a UDP socket. To open a TCP socket (for use with the newer syslog daemons such as rsyslog), specify a value of :const:`socket.SOCK_STREAM`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:430
msgid "Note that if your server is not listening on UDP port 514, :class:`SysLogHandler` may appear not to work. In that case, check what address you should be using for a domain socket - it's system dependent. For example, on Linux it's usually '/dev/log' but on OS/X it's '/var/run/syslog'. You'll need to check your platform and use the appropriate address (you may need to do this check at runtime if your application needs to run on several platforms). On Windows, you pretty much have to use the UDP option."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:439
msgid "*socktype* was added."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:445
msgid "Closes the socket to the remote host."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:450
msgid "The record is formatted, and then sent to the syslog server. If exception information is present, it is *not* sent to the server."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:456
msgid "Encodes the facility and priority into an integer. You can pass in strings or integers - if strings are passed, internal mapping dictionaries are used to convert them to integers."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:460
msgid "The symbolic ``LOG_`` values are defined in :class:`SysLogHandler` and mirror the values defined in the ``sys/syslog.h`` header file."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:463
msgid "**Priorities**"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:466
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:488
msgid "Name (string)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:466
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:488
msgid "Symbolic value"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:468
msgid "``alert``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:468
msgid "LOG_ALERT"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:470
msgid "``crit`` or ``critical``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:470
msgid "LOG_CRIT"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:472
msgid "``debug``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:472
msgid "LOG_DEBUG"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:474
msgid "``emerg`` or ``panic``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:474
msgid "LOG_EMERG"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:476
msgid "``err`` or ``error``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:476
msgid "LOG_ERR"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:478
msgid "``info``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:478
msgid "LOG_INFO"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:480
msgid "``notice``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:480
msgid "LOG_NOTICE"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:482
msgid "``warn`` or ``warning``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:482
msgid "LOG_WARNING"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:485
msgid "**Facilities**"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:490
msgid "``auth``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:490
msgid "LOG_AUTH"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:492
msgid "``authpriv``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:492
msgid "LOG_AUTHPRIV"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:494
msgid "``cron``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:494
msgid "LOG_CRON"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:496
msgid "``daemon``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:496
msgid "LOG_DAEMON"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:498
msgid "``ftp``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:498
msgid "LOG_FTP"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:500
msgid "``kern``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:500
msgid "LOG_KERN"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:502
msgid "``lpr``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:502
msgid "LOG_LPR"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:504
msgid "``mail``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:504
msgid "LOG_MAIL"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:506
msgid "``news``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:506
msgid "LOG_NEWS"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:508
msgid "``syslog``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:508
msgid "LOG_SYSLOG"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:510
msgid "``user``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:510
msgid "LOG_USER"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:512
msgid "``uucp``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:512
msgid "LOG_UUCP"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:514
msgid "``local0``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:514
msgid "LOG_LOCAL0"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:516
msgid "``local1``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:516
msgid "LOG_LOCAL1"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:518
msgid "``local2``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:518
msgid "LOG_LOCAL2"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:520
msgid "``local3``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:520
msgid "LOG_LOCAL3"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:522
msgid "``local4``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:522
msgid "LOG_LOCAL4"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:524
msgid "``local5``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:524
msgid "LOG_LOCAL5"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:526
msgid "``local6``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:526
msgid "LOG_LOCAL6"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:528
msgid "``local7``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:528
msgid "LOG_LOCAL7"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:533
msgid "Maps a logging level name to a syslog priority name. You may need to override this if you are using custom levels, or if the default algorithm is not suitable for your needs. The default algorithm maps ``DEBUG``, ``INFO``, ``WARNING``, ``ERROR`` and ``CRITICAL`` to the equivalent syslog names, and all other level names to 'warning'."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:543
msgid "NTEventLogHandler"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:545
msgid "The :class:`NTEventLogHandler` class, located in the :mod:`logging.handlers` module, supports sending logging messages to a local Windows NT, Windows 2000 or Windows XP event log. Before you can use it, you need Mark Hammond's Win32 extensions for Python installed."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:553
msgid "Returns a new instance of the :class:`NTEventLogHandler` class. The *appname* is used to define the application name as it appears in the event log. An appropriate registry entry is created using this name. The *dllname* should give the fully qualified pathname of a .dll or .exe which contains message definitions to hold in the log (if not specified, ``'win32service.pyd'`` is used - this is installed with the Win32 extensions and contains some basic placeholder message definitions. Note that use of these placeholders will make your event logs big, as the entire message source is held in the log. If you want slimmer logs, you have to pass in the name of your own .dll or .exe which contains the message definitions you want to use in the event log). The *logtype* is one of ``'Application'``, ``'System'`` or ``'Security'``, and defaults to ``'Application'``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:569
msgid "At this point, you can remove the application name from the registry as a source of event log entries. However, if you do this, you will not be able to see the events as you intended in the Event Log Viewer - it needs to be able to access the registry to get the .dll name. The current version does not do this."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:578
msgid "Determines the message ID, event category and event type, and then logs the message in the NT event log."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:584
msgid "Returns the event category for the record. Override this if you want to specify your own categories. This version returns 0."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:590
msgid "Returns the event type for the record. Override this if you want to specify your own types. This version does a mapping using the handler's typemap attribute, which is set up in :meth:`__init__` to a dictionary which contains mappings for :const:`DEBUG`, :const:`INFO`, :const:`WARNING`, :const:`ERROR` and :const:`CRITICAL`. If you are using your own levels, you will either need to override this method or place a suitable dictionary in the handler's *typemap* attribute."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:601
msgid "Returns the message ID for the record. If you are using your own messages, you could do this by having the *msg* passed to the logger being an ID rather than a format string. Then, in here, you could use a dictionary lookup to get the message ID. This version returns 1, which is the base message ID in :file:`win32service.pyd`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:610
msgid "SMTPHandler"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:612
msgid "The :class:`SMTPHandler` class, located in the :mod:`logging.handlers` module, supports sending logging messages to an email address via SMTP."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:618
msgid "Returns a new instance of the :class:`SMTPHandler` class. The instance is initialized with the from and to addresses and subject line of the email. The *toaddrs* should be a list of strings. To specify a non-standard SMTP port, use the (host, port) tuple format for the *mailhost* argument. If you use a string, the standard SMTP port is used. If your SMTP server requires authentication, you can specify a (username, password) tuple for the *credentials* argument."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:626
msgid "To specify the use of a secure protocol (TLS), pass in a tuple to the *secure* argument. This will only be used when authentication credentials are supplied. The tuple should be either an empty tuple, or a single-value tuple with the name of a keyfile, or a 2-value tuple with the names of the keyfile and certificate file. (This tuple is passed to the :meth:`smtplib.SMTP.starttls` method.)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:633
msgid "*credentials* was added."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:636
msgid "*secure* was added."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:642
msgid "Formats the record and sends it to the specified addressees."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:647
msgid "If you want to specify a subject line which is record-dependent, override this method."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:653
msgid "MemoryHandler"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:655
msgid "The :class:`MemoryHandler` class, located in the :mod:`logging.handlers` module, supports buffering of logging records in memory, periodically flushing them to a :dfn:`target` handler. Flushing occurs whenever the buffer is full, or when an event of a certain severity or greater is seen."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:660
msgid ":class:`MemoryHandler` is a subclass of the more general :class:`BufferingHandler`, which is an abstract class. This buffers logging records in memory. Whenever each record is added to the buffer, a check is made by calling :meth:`shouldFlush` to see if the buffer should be flushed.  If it should, then :meth:`flush` is expected to do the flushing."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:669
msgid "Initializes the handler with a buffer of the specified capacity."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:674
msgid "Appends the record to the buffer. If :meth:`shouldFlush` returns true, calls :meth:`flush` to process the buffer."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:680
msgid "You can override this to implement custom flushing behavior. This version just zaps the buffer to empty."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:686
msgid "Returns true if the buffer is up to capacity. This method can be overridden to implement custom flushing strategies."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:692
msgid "Returns a new instance of the :class:`MemoryHandler` class. The instance is initialized with a buffer size of *capacity*. If *flushLevel* is not specified, :const:`ERROR` is used. If no *target* is specified, the target will need to be set using :meth:`setTarget` before this handler does anything useful."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:700
msgid "Calls :meth:`flush`, sets the target to :const:`None` and clears the buffer."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:706
msgid "For a :class:`MemoryHandler`, flushing means just sending the buffered records to the target, if there is one. The buffer is also cleared when this happens. Override if you want different behavior."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:713
msgid "Sets the target handler for this handler."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:718
msgid "Checks for buffer full or a record at the *flushLevel* or higher."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:724
msgid "HTTPHandler"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:726
msgid "The :class:`HTTPHandler` class, located in the :mod:`logging.handlers` module, supports sending logging messages to a Web server, using either ``GET`` or ``POST`` semantics."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:733
msgid "Returns a new instance of the :class:`HTTPHandler` class. The ``host`` can be of the form ``host:port``, should you need to use a specific port number."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:738
msgid "Provides a dictionary, based on ``record``, which is to be URL-encoded and sent to the web server. The default implementation just returns ``record.__dict__``. This method can be overridden if e.g. only a subset of :class:`~logging.LogRecord` is to be sent to the web server, or if more specific customization of what's sent to the server is required."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:746
msgid "Sends the record to the Web server as a URL-encoded dictionary. The :meth:`mapLogRecord` method is used to convert the record to the dictionary to be sent."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:750
msgid "Since preparing a record for sending it to a Web server is not the same as a generic formatting operation, using :meth:`setFormatter` to specify a :class:`Formatter` for a :class:`HTTPHandler` has no effect. Instead of calling :meth:`format`, this handler calls :meth:`mapLogRecord` and then :func:`urllib.urlencode` to encode the dictionary in a form suitable for sending to a Web server."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:760
msgid "Module :mod:`logging`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:760
msgid "API reference for the logging module."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:762
msgid "Module :mod:`logging.config`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/logging.handlers.rst:763
msgid "Configuration API for the logging module."
msgstr ""
