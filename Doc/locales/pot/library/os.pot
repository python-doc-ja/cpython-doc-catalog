# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-01 18:32+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2
msgid ":mod:`os` --- Miscellaneous operating system interfaces"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:8
msgid "This module provides a portable way of using operating system dependent functionality.  If you just want to read or write a file see :func:`open`, if you want to manipulate paths, see the :mod:`os.path` module, and if you want to read all the lines in all the files on the command line see the :mod:`fileinput` module.  For creating temporary files and directories see the :mod:`tempfile` module, and for high-level file and directory handling see the :mod:`shutil` module."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:16
msgid "Notes on the availability of these functions:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:18
msgid "The design of all built-in operating system dependent modules of Python is such that as long as the same functionality is available, it uses the same interface; for example, the function ``os.stat(path)`` returns stat information about *path* in the same format (which happens to have originated with the POSIX interface)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:24
msgid "Extensions peculiar to a particular operating system are also available through the :mod:`os` module, but using them is of course a threat to portability."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:28
msgid "An \"Availability: Unix\" note means that this function is commonly found on Unix systems.  It does not make any claims about its existence on a specific operating system."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:32
msgid "If not separately noted, all functions that claim \"Availability: Unix\" are supported on Mac OS X, which builds on a Unix core."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:40
msgid "All functions in this module raise :exc:`OSError` in the case of invalid or inaccessible file names and paths, or other arguments that have the correct type, but are not accepted by the operating system."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:47
msgid "An alias for the built-in :exc:`OSError` exception."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:52
msgid "The name of the operating system dependent module imported.  The following names have currently been registered: ``'posix'``, ``'nt'``, ``'os2'``, ``'ce'``, ``'java'``, ``'riscos'``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:57
msgid ":attr:`sys.platform` has a finer granularity.  :func:`os.uname` gives system-dependent version information."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:60
msgid "The :mod:`platform` module provides detailed checks for the system's identity."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:67
msgid "Process Parameters"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:69
msgid "These functions and data items provide information and operate on the current process and user."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:75
msgid "A :term:`mapping` object representing the string environment. For example, ``environ['HOME']`` is the pathname of your home directory (on some platforms), and is equivalent to ``getenv(\"HOME\")`` in C."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:79
msgid "This mapping is captured the first time the :mod:`os` module is imported, typically during Python startup as part of processing :file:`site.py`.  Changes to the environment made after this time are not reflected in ``os.environ``, except for changes made by modifying ``os.environ`` directly."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:84
msgid "If the platform supports the :func:`putenv` function, this mapping may be used to modify the environment as well as query the environment.  :func:`putenv` will be called automatically when the mapping is modified."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:90
msgid "Calling :func:`putenv` directly does not change ``os.environ``, so it's better to modify ``os.environ``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:95
msgid "On some platforms, including FreeBSD and Mac OS X, setting ``environ`` may cause memory leaks.  Refer to the system documentation for :c:func:`putenv`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:99
msgid "If :func:`putenv` is not provided, a modified copy of this mapping  may be passed to the appropriate process-creation functions to cause  child processes to use a modified environment."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:103
msgid "If the platform supports the :func:`unsetenv` function, you can delete items in this mapping to unset environment variables. :func:`unsetenv` will be called automatically when an item is deleted from ``os.environ``, and when one of the :meth:`pop` or :meth:`clear` methods is called."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:108
msgid "Also unset environment variables when calling :meth:`os.environ.clear` and :meth:`os.environ.pop`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:118
msgid "These functions are described in :ref:`os-file-dir`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:123
msgid "Return the filename corresponding to the controlling terminal of the process."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:125
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:133
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:142
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:151
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:158
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:183
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:196
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:204
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:215
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:233
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:241
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:251
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:262
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:298
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:305
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:312
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:321
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:335
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:344
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:351
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:358
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:367
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:376
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:383
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:392
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:401
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:659
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:669
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:679
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:700
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:715
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:735
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:830
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:838
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:847
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1012
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1051
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1106
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1114
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1125
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1135
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1144
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1176
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1282
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1303
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1501
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1511
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1782
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1792
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1801
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1810
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1819
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1828
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1837
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1846
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1856
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1866
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1875
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1884
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1895
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1905
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1915
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1924
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1933
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1950
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1992
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2001
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2009
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2207
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2247
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2260
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2270
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2288
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2302
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2312
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2322
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2330
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2338
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2346
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2353
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2360
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2396
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2405
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2417
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2426
msgid "Availability: Unix."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:130
msgid "Return the effective group id of the current process.  This corresponds to the \"set id\" bit on the file being executed in the current process."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:140
msgid "Return the current process's effective user id."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:149
msgid "Return the real group id of the current process."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:156
msgid "Return list of supplemental group ids associated with the current process."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:162
msgid "On Mac OS X, :func:`getgroups` behavior differs somewhat from other Unix platforms. If the Python interpreter was built with a deployment target of :const:`10.5` or earlier, :func:`getgroups` returns the list of effective group ids associated with the current user process; this list is limited to a system-defined number of entries, typically 16, and may be modified by calls to :func:`setgroups` if suitably privileged. If built with a deployment target greater than :const:`10.5`, :func:`getgroups` returns the current group access list for the user associated with the effective user id of the process; the group access list may change over the lifetime of the process, it is not affected by calls to :func:`setgroups`, and its length is not limited to 16.  The deployment target value, :const:`MACOSX_DEPLOYMENT_TARGET`, can be obtained with :func:`sysconfig.get_config_var`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:179
msgid "Call the system initgroups() to initialize the group access list with all of the groups of which the specified username is a member, plus the specified group id."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:190
msgid "Return the name of the user logged in on the controlling terminal of the process.  For most purposes, it is more useful to use the environment variable :envvar:`LOGNAME` to find out who the user is, or ``pwd.getpwuid(os.getuid())[0]`` to get the login name of the process's real user id."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:201
msgid "Return the process group id of the process with process id *pid*. If *pid* is 0, the process group id of the current process is returned."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:213
msgid "Return the id of the current process group."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:222
msgid "Return the current process id."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:224
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:411
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:418
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:470
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:493
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:512
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:550
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:564
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:578
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:614
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:635
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:644
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:651
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:707
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:752
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:779
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:805
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:814
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:855
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:938
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1003
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1021
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1028
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1091
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1154
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1239
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1315
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1345
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1369
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1448
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1532
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1567
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1586
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1703
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1752
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1760
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2097
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2110
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2184
msgid "Availability: Unix, Windows."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:231
msgid "Return the parent's process id."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:238
msgid "Return a tuple (ruid, euid, suid) denoting the current process's real, effective, and saved user ids."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:248
msgid "Return a tuple (rgid, egid, sgid) denoting the current process's real, effective, and saved group ids."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:260
msgid "Return the current process's real user id."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:267
msgid "Return the value of the environment variable *varname* if it exists, or *value* if it doesn't.  *value* defaults to ``None``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:270
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:281
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:450
msgid "Availability: most flavors of Unix, Windows."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:277
msgid "Set the environment variable named *varname* to the string *value*.  Such changes to the environment affect subprocesses started with :func:`os.system`, :func:`popen` or :func:`fork` and :func:`execv`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:285
msgid "On some platforms, including FreeBSD and Mac OS X, setting ``environ`` may cause memory leaks. Refer to the system documentation for putenv."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:288
msgid "When :func:`putenv` is supported, assignments to items in ``os.environ`` are automatically translated into corresponding calls to :func:`putenv`; however, calls to :func:`putenv` don't update ``os.environ``, so it is actually preferable to assign to items of ``os.environ``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:296
msgid "Set the current process's effective group id."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:303
msgid "Set the current process's effective user id."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:310
msgid "Set the current process' group id."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:317
msgid "Set the list of supplemental group ids associated with the current process to *groups*. *groups* must be a sequence, and each element must be an integer identifying a group. This operation is typically available only to the superuser."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:325
msgid "On Mac OS X, the length of *groups* may not exceed the system-defined maximum number of effective group ids, typically 16. See the documentation for :func:`getgroups` for cases where it may not return the same group list set by calling setgroups()."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:332
msgid "Call the system call :c:func:`setpgrp` or ``setpgrp(0, 0)`` depending on which version is implemented (if any).  See the Unix manual for the semantics."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:340
msgid "Call the system call :c:func:`setpgid` to set the process group id of the process with id *pid* to the process group with id *pgrp*.  See the Unix manual for the semantics."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:349
msgid "Set the current process's real and effective group ids."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:356
msgid "Set the current process's real, effective, and saved group ids."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:365
msgid "Set the current process's real, effective, and saved user ids."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:374
msgid "Set the current process's real and effective user ids."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:381
msgid "Call the system call :c:func:`getsid`.  See the Unix manual for the semantics."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:390
msgid "Call the system call :c:func:`setsid`.  See the Unix manual for the semantics."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:399
msgid "Set the current process's user id."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:407
msgid "Return the error message corresponding to the error code in *code*. On platforms where :c:func:`strerror` returns ``NULL`` when given an unknown error number, :exc:`ValueError` is raised."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:416
msgid "Set the current numeric umask and return the previous umask."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:427
msgid "Return a 5-tuple containing information identifying the current operating system.  The tuple contains 5 strings: ``(sysname, nodename, release, version, machine)``.  Some systems truncate the nodename to 8 characters or to the leading component; a better way to get the hostname is :func:`socket.gethostname`  or even ``socket.gethostbyaddr(socket.gethostname())``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:434
msgid "Availability: recent flavors of Unix."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:441
msgid "Unset (delete) the environment variable named *varname*. Such changes to the environment affect subprocesses started with :func:`os.system`, :func:`popen` or :func:`fork` and :func:`execv`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:445
msgid "When :func:`unsetenv` is supported, deletion of items in ``os.environ`` is automatically translated into a corresponding call to :func:`unsetenv`; however, calls to :func:`unsetenv` don't update ``os.environ``, so it is actually preferable to delete items of ``os.environ``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:456
msgid "File Object Creation"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:458
msgid "These functions create new file objects. (See also :func:`open`.)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:465
msgid "Return an open file object connected to the file descriptor *fd*.  The *mode* and *bufsize* arguments have the same meaning as the corresponding arguments to the built-in :func:`open` function.  If :func:`fdopen` raises an exception, it leaves *fd* untouched (unclosed)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:472
msgid "When specified, the *mode* argument must now start with one of the letters ``'r'``, ``'w'``, or ``'a'``, otherwise a :exc:`ValueError` is raised."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:476
msgid "On Unix, when the *mode* argument starts with ``'a'``, the *O_APPEND* flag is set on the file descriptor (which the :c:func:`fdopen` implementation already does on most platforms)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:484
msgid "Open a pipe to or from *command*.  The return value is an open file object connected to the pipe, which can be read or written depending on whether *mode* is ``'r'`` (default) or ``'w'``. The *bufsize* argument has the same meaning as the corresponding argument to the built-in :func:`open` function.  The exit status of the command (encoded in the format specified for :func:`wait`) is available as the return value of the :meth:`~file.close` method of the file object, except that when the exit status is zero (termination without errors), ``None`` is returned."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:495
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:546
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:560
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:574
msgid "This function is obsolete.  Use the :mod:`subprocess` module.  Check especially the :ref:`subprocess-replacements` section."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:499
msgid "This function worked unreliably under Windows in earlier versions of Python. This was due to the use of the :c:func:`_popen` function from the libraries provided with Windows.  Newer versions of Python do not use the broken implementation from the Windows libraries."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:508
msgid "Return a new file object opened in update mode (``w+b``).  The file has no directory entries associated with it and will be automatically deleted once there are no file descriptors for the file."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:514
msgid "There are a number of different :func:`popen\\*` functions that provide slightly different ways to create subprocesses."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:517
msgid "All of the :func:`popen\\*` functions are obsolete. Use the :mod:`subprocess` module."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:521
msgid "For each of the :func:`popen\\*` variants, if *bufsize* is specified, it specifies the buffer size for the I/O pipes. *mode*, if provided, should be the string ``'b'`` or ``'t'``; on Windows this is needed to determine whether the file objects should be opened in binary or text mode.  The default value for *mode* is ``'t'``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:527
msgid "Also, for each of these variants, on Unix, *cmd* may be a sequence, in which case arguments will be passed directly to the program without shell intervention (as with :func:`os.spawnv`). If *cmd* is a string it will be passed to the shell (as with :func:`os.system`)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:532
msgid "These methods do not make it possible to retrieve the exit status from the child processes.  The only way to control the input and output streams and also retrieve the return codes is to use the :mod:`subprocess` module; these are only available on Unix."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:537
msgid "For a discussion of possible deadlock conditions related to the use of these functions, see :ref:`popen2-flow-control`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:543
msgid "Execute *cmd* as a sub-process and return the file objects ``(child_stdin, child_stdout)``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:557
msgid "Execute *cmd* as a sub-process and return the file objects ``(child_stdin, child_stdout, child_stderr)``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:571
msgid "Execute *cmd* as a sub-process and return the file objects ``(child_stdin, child_stdout_and_stderr)``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:582
msgid "(Note that ``child_stdin, child_stdout, and child_stderr`` are named from the point of view of the child process, so *child_stdin* is the child's standard input.)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:586
msgid "This functionality is also available in the :mod:`popen2` module using functions of the same names, but the return values of those functions have a different order."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:594
msgid "File Descriptor Operations"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:596
msgid "These functions operate on I/O streams referenced using file descriptors."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:598
msgid "File descriptors are small integers corresponding to a file that has been opened by the current process.  For example, standard input is usually file descriptor 0, standard output is 1, and standard error is 2.  Further files opened by a process will then be assigned 3, 4, 5, and so forth.  The name \"file descriptor\" is slightly deceptive; on Unix platforms, sockets and pipes are also referenced by file descriptors."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:605
msgid "The :meth:`~file.fileno` method can be used to obtain the file descriptor associated with a file object when required.  Note that using the file descriptor directly will bypass the file object methods, ignoring aspects such as internal buffering of data."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:612
msgid "Close file descriptor *fd*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:618
msgid "This function is intended for low-level I/O and must be applied to a file descriptor as returned by :func:`os.open` or :func:`pipe`.  To close a \"file object\" returned by the built-in function :func:`open` or by :func:`popen` or :func:`fdopen`, use its :meth:`~io.IOBase.close` method."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:626
msgid "Close all file descriptors from *fd_low* (inclusive) to *fd_high* (exclusive), ignoring errors. Equivalent to::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:642
msgid "Return a duplicate of file descriptor *fd*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:649
msgid "Duplicate file descriptor *fd* to *fd2*, closing the latter first if necessary."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:656
msgid "Change the mode of the file given by *fd* to the numeric *mode*.  See the docs for :func:`chmod` for possible values of *mode*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:666
msgid "Change the owner and group id of the file given by *fd* to the numeric *uid* and *gid*.  To leave one of the ids unchanged, set it to -1."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:676
msgid "Force write of file with filedescriptor *fd* to disk. Does not force update of metadata."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:682
msgid "This function is not available on MacOS."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:687
msgid "Return system configuration information relevant to an open file. *name* specifies the configuration value to retrieve; it may be a string which is the name of a defined system value; these names are specified in a number of standards (POSIX.1, Unix 95, Unix 98, and others).  Some platforms define additional names as well.  The names known to the host operating system are given in the ``pathconf_names`` dictionary.  For configuration variables not included in that mapping, passing an integer for *name* is also accepted."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:695
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1277
msgid "If *name* is a string and is not known, :exc:`ValueError` is raised.  If a specific value for *name* is not supported by the host system, even if it is included in ``pathconf_names``, an :exc:`OSError` is raised with :const:`errno.EINVAL` for the error number."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:705
msgid "Return status for file descriptor *fd*, like :func:`~os.stat`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:712
msgid "Return information about the filesystem containing the file associated with file descriptor *fd*, like :func:`statvfs`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:720
msgid "Force write of file with filedescriptor *fd* to disk.  On Unix, this calls the native :c:func:`fsync` function; on Windows, the MS :c:func:`_commit` function."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:723
msgid "If you're starting with a Python file object *f*, first do ``f.flush()``, and then do ``os.fsync(f.fileno())``, to ensure that all internal buffers associated with *f* are written to disk."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:727
msgid "Availability: Unix, and Windows starting in 2.2.3."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:732
msgid "Truncate the file corresponding to file descriptor *fd*, so that it is at most *length* bytes in size."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:740
msgid "Return ``True`` if the file descriptor *fd* is open and connected to a tty(-like) device, else ``False``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:746
msgid "Set the current position of file descriptor *fd* to position *pos*, modified by *how*: :const:`SEEK_SET` or ``0`` to set the position relative to the beginning of the file; :const:`SEEK_CUR` or ``1`` to set it relative to the current position; :const:`SEEK_END` or ``2`` to set it relative to the end of the file. Return the new cursor position in bytes, starting from the beginning."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:759
msgid "Parameters to the :func:`lseek` function. Their values are 0, 1, and 2, respectively."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:762
msgid "Availability: Windows, Unix."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:769
msgid "Open the file *file* and set various flags according to *flags* and possibly its mode according to *mode*. The default *mode* is ``0777`` (octal), and the current umask value is first masked out.  Return the file descriptor for the newly opened file."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:774
msgid "For a description of the flag and mode values, see the C run-time documentation; flag constants (like :const:`O_RDONLY` and :const:`O_WRONLY`) are defined in this module too (see :ref:`open-constants`).  In particular, on Windows adding :const:`O_BINARY` is needed to open files in binary mode."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:783
msgid "This function is intended for low-level I/O.  For normal usage, use the built-in function :func:`open`, which returns a \"file object\" with :meth:`~file.read` and :meth:`~file.write` methods (and many more).  To wrap a file descriptor in a \"file object\", use :func:`fdopen`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:793
msgid "Open a new pseudo-terminal pair. Return a pair of file descriptors ``(master, slave)`` for the pty and the tty, respectively. For a (slightly) more portable approach, use the :mod:`pty` module."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:797
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1961
msgid "Availability: some flavors of Unix."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:802
msgid "Create a pipe.  Return a pair of file descriptors ``(r, w)`` usable for reading and writing, respectively."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:810
msgid "Read at most *n* bytes from file descriptor *fd*. Return a string containing the bytes read.  If the end of the file referred to by *fd* has been reached, an empty string is returned."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:818
msgid "This function is intended for low-level I/O and must be applied to a file descriptor as returned by :func:`os.open` or :func:`pipe`.  To read a \"file object\" returned by the built-in function :func:`open` or by :func:`popen` or :func:`fdopen`, or :data:`sys.stdin`, use its :meth:`~file.read` or :meth:`~file.readline` methods."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:827
msgid "Return the process group associated with the terminal given by *fd* (an open file descriptor as returned by :func:`os.open`)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:835
msgid "Set the process group associated with the terminal given by *fd* (an open file descriptor as returned by :func:`os.open`) to *pg*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:843
msgid "Return a string which specifies the terminal device associated with file descriptor *fd*.  If *fd* is not associated with a terminal device, an exception is raised."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:852
msgid "Write the string *str* to file descriptor *fd*. Return the number of bytes actually written."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:859
msgid "This function is intended for low-level I/O and must be applied to a file descriptor as returned by :func:`os.open` or :func:`pipe`.  To write a \"file object\" returned by the built-in function :func:`open` or by :func:`popen` or :func:`fdopen`, or :data:`sys.stdout` or :data:`sys.stderr`, use its :meth:`~file.write` method."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:869
msgid "``open()`` flag constants"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:871
msgid "The following constants are options for the *flags* parameter to the :func:`~os.open` function.  They can be combined using the bitwise OR operator ``|``.  Some of them are not available on all platforms.  For descriptions of their availability and use, consult the :manpage:`open(2)` manual page on Unix or `the MSDN <http://msdn.microsoft.com/en-us/library/z0kc8e3z.aspx>`_ on Windows."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:886
msgid "The above constants are available on Unix and Windows."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:896
msgid "The above constants are only available on Unix."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:907
msgid "The above constants are only available on Windows."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:918
msgid "The above constants are extensions and not present if they are not defined by the C library."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:925
msgid "Files and Directories"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:929
msgid "Use the real uid/gid to test for access to *path*.  Note that most operations will use the effective uid/gid, therefore this routine can be used in a suid/sgid environment to test if the invoking user has the specified access to *path*.  *mode* should be :const:`F_OK` to test the existence of *path*, or it can be the inclusive OR of one or more of :const:`R_OK`, :const:`W_OK`, and :const:`X_OK` to test permissions.  Return :const:`True` if access is allowed, :const:`False` if not. See the Unix man page :manpage:`access(2)` for more information."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:942
msgid "Using :func:`access` to check if a user is authorized to e.g. open a file before actually doing so using :func:`open` creates a security hole, because the user might exploit the short time interval between checking and opening the file to manipulate it. It's preferable to use :term:`EAFP` techniques. For example::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:953
msgid "is better written as::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:968
msgid "I/O operations may fail even when :func:`access` indicates that they would succeed, particularly for operations on network filesystems which may have permissions semantics beyond the usual POSIX permission-bit model."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:975
msgid "Value to pass as the *mode* parameter of :func:`access` to test the existence of *path*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:981
msgid "Value to include in the *mode* parameter of :func:`access` to test the readability of *path*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:987
msgid "Value to include in the *mode* parameter of :func:`access` to test the writability of *path*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:993
msgid "Value to include in the *mode* parameter of :func:`access` to determine if *path* can be executed."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1001
msgid "Change the current working directory to *path*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1008
msgid "Change the current working directory to the directory represented by the file descriptor *fd*.  The descriptor must refer to an opened directory, not an open file."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1019
msgid "Return a string representing the current working directory."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1026
msgid "Return a Unicode object representing the current working directory."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1035
msgid "Set the flags of *path* to the numeric *flags*. *flags* may take a combination (bitwise OR) of the following values (as defined in the :mod:`stat` module):"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1038
msgid ":data:`stat.UF_NODUMP`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1039
msgid ":data:`stat.UF_IMMUTABLE`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1040
msgid ":data:`stat.UF_APPEND`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1041
msgid ":data:`stat.UF_OPAQUE`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1042
msgid ":data:`stat.UF_NOUNLINK`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1043
msgid ":data:`stat.UF_COMPRESSED`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1044
msgid ":data:`stat.UF_HIDDEN`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1045
msgid ":data:`stat.SF_ARCHIVED`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1046
msgid ":data:`stat.SF_IMMUTABLE`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1047
msgid ":data:`stat.SF_APPEND`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1048
msgid ":data:`stat.SF_NOUNLINK`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1049
msgid ":data:`stat.SF_SNAPSHOT`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1058
msgid "Change the root directory of the current process to *path*. Availability: Unix."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1066
msgid "Change the mode of *path* to the numeric *mode*. *mode* may take one of the following values (as defined in the :mod:`stat` module) or bitwise ORed combinations of them:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1071
msgid ":data:`stat.S_ISUID`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1072
msgid ":data:`stat.S_ISGID`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1073
msgid ":data:`stat.S_ENFMT`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1074
msgid ":data:`stat.S_ISVTX`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1075
msgid ":data:`stat.S_IREAD`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1076
msgid ":data:`stat.S_IWRITE`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1077
msgid ":data:`stat.S_IEXEC`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1078
msgid ":data:`stat.S_IRWXU`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1079
msgid ":data:`stat.S_IRUSR`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1080
msgid ":data:`stat.S_IWUSR`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1081
msgid ":data:`stat.S_IXUSR`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1082
msgid ":data:`stat.S_IRWXG`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1083
msgid ":data:`stat.S_IRGRP`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1084
msgid ":data:`stat.S_IWGRP`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1085
msgid ":data:`stat.S_IXGRP`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1086
msgid ":data:`stat.S_IRWXO`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1087
msgid ":data:`stat.S_IROTH`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1088
msgid ":data:`stat.S_IWOTH`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1089
msgid ":data:`stat.S_IXOTH`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1095
msgid "Although Windows supports :func:`chmod`, you can only  set the file's read-only flag with it (via the ``stat.S_IWRITE``  and ``stat.S_IREAD`` constants or a corresponding integer value).  All other bits are ignored."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1103
msgid "Change the owner and group id of *path* to the numeric *uid* and *gid*. To leave one of the ids unchanged, set it to -1."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1111
msgid "Set the flags of *path* to the numeric *flags*, like :func:`chflags`, but do not follow symbolic links."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1121
msgid "Change the mode of *path* to the numeric *mode*. If path is a symlink, this affects the symlink rather than the target. See the docs for :func:`chmod` for possible values of *mode*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1132
msgid "Change the owner and group id of *path* to the numeric *uid* and *gid*. This function will not follow symbolic links."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1142
msgid "Create a hard link pointing to *source* named *link_name*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1149
msgid "Return a list containing the names of the entries in the directory given by *path*.  The list is in arbitrary order.  It does not include the special entries ``'.'`` and ``'..'`` even if they are present in the directory."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1156
msgid "On Windows NT/2k/XP and Unix, if *path* is a Unicode object, the result will be a list of Unicode objects. Undecodable filenames will still be returned as string objects."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1164
msgid "Perform the equivalent of an :c:func:`lstat` system call on the given path. Similar to :func:`~os.stat`, but does not follow symbolic links.  On platforms that do not support symbolic links, this is an alias for :func:`~os.stat`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1172
msgid "Create a FIFO (a named pipe) named *path* with numeric mode *mode*.  The default *mode* is ``0666`` (octal).  The current umask value is first masked out from the mode."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1178
msgid "FIFOs are pipes that can be accessed like regular files.  FIFOs exist until they are deleted (for example with :func:`os.unlink`). Generally, FIFOs are used as rendezvous between \"client\" and \"server\" type processes: the server opens the FIFO for reading, and the client opens it for writing.  Note that :func:`mkfifo` doesn't open the FIFO --- it just creates the rendezvous point."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1187
msgid "Create a filesystem node (file, device special file or named pipe) named *filename*. *mode* specifies both the permissions to use and the type of node to be created, being combined (bitwise OR) with one of ``stat.S_IFREG``, ``stat.S_IFCHR``, ``stat.S_IFBLK``, and ``stat.S_IFIFO`` (those constants are available in :mod:`stat`). For ``stat.S_IFCHR`` and ``stat.S_IFBLK``, *device* defines the newly created device special file (probably using :func:`os.makedev`), otherwise it is ignored."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1201
msgid "Extract the device major number from a raw device number (usually the :attr:`st_dev` or :attr:`st_rdev` field from :c:type:`stat`)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1209
msgid "Extract the device minor number from a raw device number (usually the :attr:`st_dev` or :attr:`st_rdev` field from :c:type:`stat`)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1217
msgid "Compose a raw device number from the major and minor device numbers."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1224
msgid "Create a directory named *path* with numeric mode *mode*. The default *mode* is ``0777`` (octal).  If the directory already exists, :exc:`OSError` is raised."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1230
msgid "On some systems, *mode* is ignored.  Where it is used, the current umask value is first masked out.  If bits other than the last 9 (i.e. the last 3 digits of the octal representation of the *mode*) are set, their meaning is platform-dependent.  On some platforms, they are ignored and you should call :func:`chmod` explicitly to set them."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1236
msgid "It is also possible to create temporary directories; see the :mod:`tempfile` module's :func:`tempfile.mkdtemp` function."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1248
msgid "Recursive directory creation function.  Like :func:`mkdir`, but makes all intermediate-level directories needed to contain the leaf directory.  Raises an :exc:`error` exception if the leaf directory already exists or cannot be created.  The default *mode* is ``0777`` (octal)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1253
msgid "The *mode* parameter is passed to :func:`mkdir`; see :ref:`the mkdir() description <mkdir_modebits>` for how it is interpreted."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1258
msgid ":func:`makedirs` will become confused if the path elements to create include :data:`os.pardir`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1263
msgid "This function now handles UNC paths correctly."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1269
msgid "Return system configuration information relevant to a named file. *name* specifies the configuration value to retrieve; it may be a string which is the name of a defined system value; these names are specified in a number of standards (POSIX.1, Unix 95, Unix 98, and others).  Some platforms define additional names as well.  The names known to the host operating system are given in the ``pathconf_names`` dictionary.  For configuration variables not included in that mapping, passing an integer for *name* is also accepted."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1287
msgid "Dictionary mapping names accepted by :func:`pathconf` and :func:`fpathconf` to the integer values defined for those names by the host operating system.  This can be used to determine the set of names known to the system. Availability: Unix."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1295
msgid "Return a string representing the path to which the symbolic link points.  The result may be either an absolute or relative pathname; if it is relative, it may be converted to an absolute pathname using ``os.path.join(os.path.dirname(path), result)``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1300
msgid "If the *path* is a Unicode object the result will also be a Unicode object."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1308
msgid "Remove (delete) the file *path*.  If *path* is a directory, :exc:`OSError` is raised; see :func:`rmdir` below to remove a directory.  This is identical to the :func:`unlink` function documented below.  On Windows, attempting to remove a file that is in use causes an exception to be raised; on Unix, the directory entry is removed but the storage allocated to the file is not made available until the original file is no longer in use."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1322
msgid "Remove directories recursively.  Works like :func:`rmdir` except that, if the leaf directory is successfully removed, :func:`removedirs`  tries to successively remove every parent directory mentioned in  *path* until an error is raised (which is ignored, because it generally means that a parent directory is not empty). For example, ``os.removedirs('foo/bar/baz')`` will first remove the directory ``'foo/bar/baz'``, and then remove ``'foo/bar'`` and ``'foo'`` if they are empty. Raises :exc:`OSError` if the leaf directory could not be successfully removed."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1336
msgid "Rename the file or directory *src* to *dst*.  If *dst* is a directory, :exc:`OSError` will be raised.  On Unix, if *dst* exists and is a file, it will be replaced silently if the user has permission.  The operation may fail on some Unix flavors if *src* and *dst* are on different filesystems.  If successful, the renaming will be an atomic operation (this is a POSIX requirement).  On Windows, if *dst* already exists, :exc:`OSError` will be raised even if it is a file; there may be no way to implement an atomic rename when *dst* names an existing file."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1350
msgid "Recursive directory or file renaming function. Works like :func:`rename`, except creation of any intermediate directories needed to make the new pathname good is attempted first. After the rename, directories corresponding to rightmost path segments of the old name will be pruned away using :func:`removedirs`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1359
msgid "This function can fail with the new directory structure made if you lack permissions needed to remove the leaf directory or file."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1365
msgid "Remove (delete) the directory *path*.  Only works when the directory is empty, otherwise, :exc:`OSError` is raised.  In order to remove whole directory trees, :func:`shutil.rmtree` can be used."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1374
msgid "Perform the equivalent of a :c:func:`stat` system call on the given path. (This function follows symlinks; to stat a symlink use :func:`lstat`.)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1377
msgid "The return value is an object whose attributes correspond to the members of the :c:type:`stat` structure, namely:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1380
msgid ":attr:`st_mode` - protection bits,"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1381
msgid ":attr:`st_ino` - inode number,"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1382
msgid ":attr:`st_dev` - device,"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1383
msgid ":attr:`st_nlink` - number of hard links,"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1384
msgid ":attr:`st_uid` - user id of owner,"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1385
msgid ":attr:`st_gid` - group id of owner,"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1386
msgid ":attr:`st_size` - size of file, in bytes,"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1387
msgid ":attr:`st_atime` - time of most recent access,"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1388
msgid ":attr:`st_mtime` - time of most recent content modification,"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1389
msgid ":attr:`st_ctime` - platform dependent; time of most recent metadata change on Unix, or the time of creation on Windows)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1392
msgid "If :func:`stat_float_times` returns ``True``, the time values are floats, measuring seconds. Fractions of a second may be reported if the system supports that. See :func:`stat_float_times` for further discussion."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1397
msgid "On some Unix systems (such as Linux), the following attributes may also be available:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1400
msgid ":attr:`st_blocks` - number of 512-byte blocks allocated for file"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1401
msgid ":attr:`st_blksize` - filesystem blocksize for efficient file system I/O"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1402
msgid ":attr:`st_rdev` - type of device if an inode device"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1403
msgid ":attr:`st_flags` - user defined flags for file"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1405
msgid "On other Unix systems (such as FreeBSD), the following attributes may be available (but may be only filled out if root tries to use them):"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1408
msgid ":attr:`st_gen` - file generation number"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1409
msgid ":attr:`st_birthtime` - time of file creation"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1411
msgid "On RISCOS systems, the following attributes are also available:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1413
msgid ":attr:`st_ftype` (file type)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1414
msgid ":attr:`st_attrs` (attributes)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1415
msgid ":attr:`st_obtype` (object type)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1419
msgid "The exact meaning and resolution of the :attr:`st_atime`, :attr:`st_mtime`, and :attr:`st_ctime` attributes depend on the operating system and the file system. For example, on Windows systems using the FAT or FAT32 file systems, :attr:`st_mtime` has 2-second resolution, and :attr:`st_atime` has only 1-day resolution.  See your operating system documentation for details."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1426
msgid "For backward compatibility, the return value of :func:`~os.stat` is also accessible as a tuple of at least 10 integers giving the most important (and portable) members of the :c:type:`stat` structure, in the order :attr:`st_mode`, :attr:`st_ino`, :attr:`st_dev`, :attr:`st_nlink`, :attr:`st_uid`, :attr:`st_gid`, :attr:`st_size`, :attr:`st_atime`, :attr:`st_mtime`, :attr:`st_ctime`. More items may be added at the end by some implementations."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1435
msgid "The standard module :mod:`stat` defines functions and constants that are useful for extracting information from a :c:type:`stat` structure. (On Windows, some items are filled with dummy values.)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1439
msgid "Example::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1450
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1503
msgid "Added access to values as attributes of the returned object."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1453
msgid "Added :attr:`st_gen` and :attr:`st_birthtime`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1459
msgid "Determine whether :class:`stat_result` represents time stamps as float objects. If *newvalue* is ``True``, future calls to :func:`~os.stat` return floats, if it is ``False``, future calls return ints. If *newvalue* is omitted, return the current setting."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1464
msgid "For compatibility with older Python versions, accessing :class:`stat_result` as a tuple always returns integers."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1467
msgid "Python now returns float values by default. Applications which do not work correctly with floating point time stamps can use this function to restore the old behaviour."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1472
msgid "The resolution of the timestamps (that is the smallest possible fraction) depends on the system. Some systems only support second resolution; on these systems, the fraction will always be zero."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1476
msgid "It is recommended that this setting is only changed at program startup time in the *__main__* module; libraries should never change this setting. If an application uses a library that works incorrectly if floating point time stamps are processed, this application should turn the feature off until the library has been corrected."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1485
msgid "Perform a :c:func:`statvfs` system call on the given path.  The return value is an object whose attributes describe the filesystem on the given path, and correspond to the members of the :c:type:`statvfs` structure, namely: :attr:`f_bsize`, :attr:`f_frsize`, :attr:`f_blocks`, :attr:`f_bfree`, :attr:`f_bavail`, :attr:`f_files`, :attr:`f_ffree`, :attr:`f_favail`, :attr:`f_flag`, :attr:`f_namemax`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1494
msgid "For backward compatibility, the return value is also accessible as a tuple whose values correspond to the attributes, in the order given above. The standard module :mod:`statvfs` defines constants that are useful for extracting information from a :c:type:`statvfs` structure when accessing it as a sequence; this remains useful when writing code that needs to work with versions of Python that don't support accessing the fields as attributes."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1509
msgid "Create a symbolic link pointing to *source* named *link_name*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1516
msgid "Return a unique path name that is reasonable for creating a temporary file. This will be an absolute path that names a potential directory entry in the directory *dir* or a common location for temporary files if *dir* is omitted or ``None``.  If given and not ``None``, *prefix* is used to provide a short prefix to the filename.  Applications are responsible for properly creating and managing files created using paths returned by :func:`tempnam`; no automatic cleanup is provided. On Unix, the environment variable :envvar:`TMPDIR` overrides *dir*, while on Windows :envvar:`TMP` is used.  The specific behavior of this function depends on the C library implementation; some aspects are underspecified in system documentation."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1529
msgid "Use of :func:`tempnam` is vulnerable to symlink attacks; consider using :func:`tmpfile` (section :ref:`os-newstreams`) instead."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1537
msgid "Return a unique path name that is reasonable for creating a temporary file. This will be an absolute path that names a potential directory entry in a common location for temporary files.  Applications are responsible for properly creating and managing files created using paths returned by :func:`tmpnam`; no automatic cleanup is provided."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1545
msgid "Use of :func:`tmpnam` is vulnerable to symlink attacks; consider using :func:`tmpfile` (section :ref:`os-newstreams`) instead."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1548
msgid "Availability: Unix, Windows.  This function probably shouldn't be used on Windows, though: Microsoft's implementation of :func:`tmpnam` always creates a name in the root directory of the current drive, and that's generally a poor location for a temp file (depending on privileges, you may not even be able to open a file using this name)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1557
msgid "The maximum number of unique names that :func:`tmpnam` will generate before reusing names."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1563
msgid "Remove (delete) the file *path*.  This is the same function as :func:`remove`; the :func:`unlink` name is its traditional Unix name."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1572
msgid "Set the access and modified times of the file specified by *path*. If *times* is ``None``, then the file's access and modified times are set to the current time. (The effect is similar to running the Unix program :program:`touch` on the path.)  Otherwise, *times* must be a 2-tuple of numbers, of the form ``(atime, mtime)`` which is used to set the access and modified times, respectively. Whether a directory can be given for *path* depends on whether the operating system implements directories as files (for example, Windows does not).  Note that the exact times you set here may not be returned by a subsequent :func:`~os.stat` call, depending on the resolution with which your operating system records access and modification times; see :func:`~os.stat`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1583
msgid "Added support for ``None`` for *times*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1595
msgid "Generate the file names in a directory tree by walking the tree either top-down or bottom-up. For each directory in the tree rooted at directory *top* (including *top* itself), it yields a 3-tuple ``(dirpath, dirnames, filenames)``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1600
msgid "*dirpath* is a string, the path to the directory.  *dirnames* is a list of the names of the subdirectories in *dirpath* (excluding ``'.'`` and ``'..'``). *filenames* is a list of the names of the non-directory files in *dirpath*. Note that the names in the lists contain no path components.  To get a full path (which begins with *top*) to a file or directory in *dirpath*, do ``os.path.join(dirpath, name)``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1607
msgid "If optional argument *topdown* is ``True`` or not specified, the triple for a directory is generated before the triples for any of its subdirectories (directories are generated top-down).  If *topdown* is ``False``, the triple for a directory is generated after the triples for all of its subdirectories (directories are generated bottom-up). No matter the value of *topdown*, the list of subdirectories is retrieved before the tuples for the directory and its subdirectories are generated."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1615
msgid "When *topdown* is ``True``, the caller can modify the *dirnames* list in-place (perhaps using :keyword:`del` or slice assignment), and :func:`walk` will only recurse into the subdirectories whose names remain in *dirnames*; this can be used to prune the search, impose a specific order of visiting, or even to inform :func:`walk` about directories the caller creates or renames before it resumes :func:`walk` again.  Modifying *dirnames* when *topdown* is ``False`` has no effect on the behavior of the walk, because in bottom-up mode the directories in *dirnames* are generated before *dirpath* itself is generated."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1624
msgid "By default, errors from the :func:`listdir` call are ignored.  If optional argument *onerror* is specified, it should be a function; it will be called with one argument, an :exc:`OSError` instance.  It can report the error to continue with the walk, or raise the exception to abort the walk.  Note that the filename is available as the ``filename`` attribute of the exception object."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1630
msgid "By default, :func:`walk` will not walk down into symbolic links that resolve to directories. Set *followlinks* to ``True`` to visit directories pointed to by symlinks, on systems that support them."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1634
msgid "The *followlinks* parameter."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1639
msgid "Be aware that setting *followlinks* to ``True`` can lead to infinite recursion if a link points to a parent directory of itself. :func:`walk` does not keep track of the directories it visited already."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1645
msgid "If you pass a relative pathname, don't change the current working directory between resumptions of :func:`walk`.  :func:`walk` never changes the current directory, and assumes that its caller doesn't either."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1649
msgid "This example displays the number of bytes taken by non-directory files in each directory under the starting directory, except that it doesn't look under any CVS subdirectory::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1662
msgid "In the next example, walking the tree bottom-up is essential: :func:`rmdir` doesn't allow deleting a directory before the directory is empty::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1682
msgid "Process Management"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1684
msgid "These functions may be used to create and manage processes."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1686
msgid "The various :func:`exec\\* <execl>` functions take a list of arguments for the new program loaded into the process.  In each case, the first of these arguments is passed to the new program as its own name rather than as an argument a user may have typed on a command line.  For the C programmer, this is the ``argv[0]`` passed to a program's :c:func:`main`.  For example, ``os.execv('/bin/echo', ['foo', 'bar'])`` will only print ``bar`` on standard output; ``foo`` will seem to be ignored."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1697
msgid "Generate a :const:`SIGABRT` signal to the current process.  On Unix, the default behavior is to produce a core dump; on Windows, the process immediately returns an exit code of ``3``.  Be aware that calling this function will not call the Python signal handler registered for :const:`SIGABRT` with :func:`signal.signal`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1715
msgid "These functions all execute a new program, replacing the current process; they do not return.  On Unix, the new executable is loaded into the current process, and will have the same process id as the caller.  Errors will be reported as :exc:`OSError` exceptions."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1720
msgid "The current process is replaced immediately. Open file objects and descriptors are not flushed, so if there may be data buffered on these open files, you should flush them using :func:`sys.stdout.flush` or :func:`os.fsync` before calling an :func:`exec\\* <execl>` function."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1726
msgid "The \"l\" and \"v\" variants of the :func:`exec\\* <execl>` functions differ in how command-line arguments are passed.  The \"l\" variants are perhaps the easiest to work with if the number of parameters is fixed when the code is written; the individual parameters simply become additional parameters to the :func:`execl\\*` functions.  The \"v\" variants are good when the number of parameters is variable, with the arguments being passed in a list or tuple as the *args* parameter.  In either case, the arguments to the child process should start with the name of the command being run, but this is not enforced."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1735
msgid "The variants which include a \"p\" near the end (:func:`execlp`, :func:`execlpe`, :func:`execvp`, and :func:`execvpe`) will use the :envvar:`PATH` environment variable to locate the program *file*.  When the environment is being replaced (using one of the :func:`exec\\*e <execl>` variants, discussed in the next paragraph), the new environment is used as the source of the :envvar:`PATH` variable. The other variants, :func:`execl`, :func:`execle`, :func:`execv`, and :func:`execve`, will not use the :envvar:`PATH` variable to locate the executable; *path* must contain an appropriate absolute or relative path."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1745
msgid "For :func:`execle`, :func:`execlpe`, :func:`execve`, and :func:`execvpe` (note that these all end in \"e\"), the *env* parameter must be a mapping which is used to define the environment variables for the new process (these are used instead of the current process' environment); the functions :func:`execl`, :func:`execlp`, :func:`execv`, and :func:`execvp` all cause the new process to inherit the environment of the current process."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1757
msgid "Exit the process with status *n*, without calling cleanup handlers, flushing stdio buffers, etc."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1764
msgid "The standard way to exit is ``sys.exit(n)``.  :func:`_exit` should normally only be used in the child process after a :func:`fork`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1767
msgid "The following exit codes are defined and can be used with :func:`_exit`, although they are not required.  These are typically used for system programs written in Python, such as a mail server's external command delivery program."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1773
msgid "Some of these may not be available on all Unix platforms, since there is some variation.  These constants are defined where they are defined by the underlying platform."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1780
msgid "Exit code that means no error occurred."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1789
msgid "Exit code that means the command was used incorrectly, such as when the wrong number of arguments are given."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1799
msgid "Exit code that means the input data was incorrect."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1808
msgid "Exit code that means an input file did not exist or was not readable."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1817
msgid "Exit code that means a specified user did not exist."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1826
msgid "Exit code that means a specified host did not exist."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1835
msgid "Exit code that means that a required service is unavailable."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1844
msgid "Exit code that means an internal software error was detected."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1853
msgid "Exit code that means an operating system error was detected, such as the inability to fork or create a pipe."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1863
msgid "Exit code that means some system file did not exist, could not be opened, or had some other kind of error."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1873
msgid "Exit code that means a user specified output file could not be created."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1882
msgid "Exit code that means that an error occurred while doing I/O on some file."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1891
msgid "Exit code that means a temporary failure occurred.  This indicates something that may not really be an error, such as a network connection that couldn't be made during a retryable operation."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1902
msgid "Exit code that means that a protocol exchange was illegal, invalid, or not understood."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1912
msgid "Exit code that means that there were insufficient permissions to perform the operation (but not intended for file system problems)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1922
msgid "Exit code that means that some kind of configuration error occurred."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1931
msgid "Exit code that means something like \"an entry was not found\"."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1940
msgid "Fork a child process.  Return ``0`` in the child and the child's process id in the parent.  If an error occurs :exc:`OSError` is raised."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1943
msgid "Note that some platforms including FreeBSD <= 6.3, Cygwin and OS/2 EMX have known issues when using fork() from a thread."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1948
msgid "See :mod:`ssl` for applications that use the SSL module with fork()."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1955
msgid "Fork a child process, using a new pseudo-terminal as the child's controlling terminal. Return a pair of ``(pid, fd)``, where *pid* is ``0`` in the child, the new child's process id in the parent, and *fd* is the file descriptor of the master end of the pseudo-terminal.  For a more portable approach, use the :mod:`pty` module.  If an error occurs :exc:`OSError` is raised."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1970
msgid "Send signal *sig* to the process *pid*.  Constants for the specific signals available on the host platform are defined in the :mod:`signal` module."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1973
msgid "Windows: The :data:`signal.CTRL_C_EVENT` and :data:`signal.CTRL_BREAK_EVENT` signals are special signals which can only be sent to console processes which share a common console window, e.g., some subprocesses. Any other value for *sig* will cause the process to be unconditionally killed by the TerminateProcess API, and the exit code will be set to *sig*. The Windows version of :func:`kill` additionally takes process handles to be killed."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1981
msgid "Windows support"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1990
msgid "Send the signal *sig* to the process group *pgid*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:1999
msgid "Add *increment* to the process's \"niceness\".  Return the new niceness."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2006
msgid "Lock program segments into memory.  The value of *op* (defined in ``<sys/lock.h>``) determines which segments are locked."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2018
msgid "Run child processes, returning opened pipes for communications.  These functions are described in section :ref:`os-newstreams`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2031
msgid "Execute the program *path* in a new process."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2033
msgid "(Note that the :mod:`subprocess` module provides more powerful facilities for spawning new processes and retrieving their results; using that module is preferable to using these functions.  Check especially the :ref:`subprocess-replacements` section.)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2038
msgid "If *mode* is :const:`P_NOWAIT`, this function returns the process id of the new process; if *mode* is :const:`P_WAIT`, returns the process's exit code if it exits normally, or ``-signal``, where *signal* is the signal that killed the process.  On Windows, the process id will actually be the process handle, so can be used with the :func:`waitpid` function."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2044
msgid "The \"l\" and \"v\" variants of the :func:`spawn\\* <spawnl>` functions differ in how command-line arguments are passed.  The \"l\" variants are perhaps the easiest to work with if the number of parameters is fixed when the code is written; the individual parameters simply become additional parameters to the :func:`spawnl\\*` functions.  The \"v\" variants are good when the number of parameters is variable, with the arguments being passed in a list or tuple as the *args* parameter.  In either case, the arguments to the child process must start with the name of the command being run."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2053
msgid "The variants which include a second \"p\" near the end (:func:`spawnlp`, :func:`spawnlpe`, :func:`spawnvp`, and :func:`spawnvpe`) will use the :envvar:`PATH` environment variable to locate the program *file*.  When the environment is being replaced (using one of the :func:`spawn\\*e <spawnl>` variants, discussed in the next paragraph), the new environment is used as the source of the :envvar:`PATH` variable.  The other variants, :func:`spawnl`, :func:`spawnle`, :func:`spawnv`, and :func:`spawnve`, will not use the :envvar:`PATH` variable to locate the executable; *path* must contain an appropriate absolute or relative path."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2063
msgid "For :func:`spawnle`, :func:`spawnlpe`, :func:`spawnve`, and :func:`spawnvpe` (note that these all end in \"e\"), the *env* parameter must be a mapping which is used to define the environment variables for the new process (they are used instead of the current process' environment); the functions :func:`spawnl`, :func:`spawnlp`, :func:`spawnv`, and :func:`spawnvp` all cause the new process to inherit the environment of the current process.  Note that keys and values in the *env* dictionary must be strings; invalid keys or values will cause the function to fail, with a return value of ``127``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2072
msgid "As an example, the following calls to :func:`spawnlp` and :func:`spawnvpe` are equivalent::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2081
msgid "Availability: Unix, Windows.  :func:`spawnlp`, :func:`spawnlpe`, :func:`spawnvp` and :func:`spawnvpe` are not available on Windows.  :func:`spawnle` and :func:`spawnve` are not thread-safe on Windows; we advise you to use the :mod:`subprocess` module instead."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2092
msgid "Possible values for the *mode* parameter to the :func:`spawn\\* <spawnl>` family of functions.  If either of these values is given, the :func:`spawn\\*` functions will return as soon as the new process has been created, with the process id as the return value."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2104
msgid "Possible value for the *mode* parameter to the :func:`spawn\\* <spawnl>` family of functions.  If this is given as *mode*, the :func:`spawn\\*` functions will not return until the new process has run to completion and will return the exit code of the process the run is successful, or ``-signal`` if a signal kills the process."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2118
msgid "Possible values for the *mode* parameter to the :func:`spawn\\* <spawnl>` family of functions.  These are less portable than those listed above. :const:`P_DETACH` is similar to :const:`P_NOWAIT`, but the new process is detached from the console of the calling process. If :const:`P_OVERLAY` is used, the current process will be replaced; the :func:`spawn\\*` function will not return."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2124
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2151
msgid "Availability: Windows."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2131
msgid "Start a file with its associated application."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2133
msgid "When *operation* is not specified or ``'open'``, this acts like double-clicking the file in Windows Explorer, or giving the file name as an argument to the :program:`start` command from the interactive command shell: the file is opened with whatever application (if any) its extension is associated."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2138
msgid "When another *operation* is given, it must be a \"command verb\" that specifies what should be done with the file. Common verbs documented by Microsoft are ``'print'`` and  ``'edit'`` (to be used on files) as well as ``'explore'`` and ``'find'`` (to be used on directories)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2143
msgid ":func:`startfile` returns as soon as the associated application is launched. There is no option to wait for the application to close, and no way to retrieve the application's exit status.  The *path* parameter is relative to the current directory.  If you want to use an absolute path, make sure the first character is not a slash (``'/'``); the underlying Win32 :c:func:`ShellExecute` function doesn't work if it is.  Use the :func:`os.path.normpath` function to ensure that the path is properly encoded for Win32."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2155
msgid "The *operation* parameter."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2161
msgid "Execute the command (a string) in a subshell.  This is implemented by calling the Standard C function :c:func:`system`, and has the same limitations. Changes to :data:`sys.stdin`, etc. are not reflected in the environment of the executed command."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2166
msgid "On Unix, the return value is the exit status of the process encoded in the format specified for :func:`wait`.  Note that POSIX does not specify the meaning of the return value of the C :c:func:`system` function, so the return value of the Python function is system-dependent."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2171
msgid "On Windows, the return value is that returned by the system shell after running *command*, given by the Windows environment variable :envvar:`COMSPEC`: on :program:`command.com` systems (Windows 95, 98 and ME) this is always ``0``; on :program:`cmd.exe` systems (Windows NT, 2000 and XP) this is the exit status of the command run; on systems using a non-native shell, consult your shell documentation."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2178
msgid "The :mod:`subprocess` module provides more powerful facilities for spawning new processes and retrieving their results; using that module is preferable to using this function.  See the :ref:`subprocess-replacements` section in the :mod:`subprocess` documentation for some helpful recipes."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2189
msgid "Return a 5-tuple of floating point numbers indicating accumulated (processor or other) times, in seconds.  The items are: user time, system time, children's user time, children's system time, and elapsed real time since a fixed point in the past, in that order.  See the Unix manual page :manpage:`times(2)` or the corresponding Windows Platform API documentation. On Windows, only the first two items are filled, the others are zero."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2196
msgid "Availability: Unix, Windows"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2201
msgid "Wait for completion of a child process, and return a tuple containing its pid and exit status indication: a 16-bit number, whose low byte is the signal number that killed the process, and whose high byte is the exit status (if the signal number is zero); the high bit of the low byte is set if a core file was produced."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2212
msgid "The details of this function differ on Unix and Windows."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2214
msgid "On Unix: Wait for completion of a child process given by process id *pid*, and return a tuple containing its process id and exit status indication (encoded as for :func:`wait`).  The semantics of the call are affected by the value of the integer *options*, which should be ``0`` for normal operation."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2219
msgid "If *pid* is greater than ``0``, :func:`waitpid` requests status information for that specific process.  If *pid* is ``0``, the request is for the status of any child in the process group of the current process.  If *pid* is ``-1``, the request pertains to any child of the current process.  If *pid* is less than ``-1``, status is requested for any process in the process group ``-pid`` (the absolute value of *pid*)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2226
msgid "An :exc:`OSError` is raised with the value of errno when the syscall returns -1."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2229
msgid "On Windows: Wait for completion of a process given by process handle *pid*, and return a tuple containing *pid*, and its exit status shifted left by 8 bits (shifting makes cross-platform use of the function easier). A *pid* less than or equal to ``0`` has no special meaning on Windows, and raises an exception. The value of integer *options* has no effect. *pid* can refer to any process whose id is known, not necessarily a child process. The :func:`spawn\\* <spawnl>` functions called with :const:`P_NOWAIT` return suitable process handles."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2240
msgid "Similar to :func:`waitpid`, except no process id argument is given and a 3-element tuple containing the child's process id, exit status indication, and resource usage information is returned.  Refer to :mod:`resource`.\\ :func:`~resource.getrusage` for details on resource usage information.  The option argument is the same as that provided to :func:`waitpid` and :func:`wait4`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2254
msgid "Similar to :func:`waitpid`, except a 3-element tuple, containing the child's process id, exit status indication, and resource usage information is returned. Refer to :mod:`resource`.\\ :func:`~resource.getrusage` for details on resource usage information.  The arguments to :func:`wait4` are the same as those provided to :func:`waitpid`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2267
msgid "The option for :func:`waitpid` to return immediately if no child process status is available immediately. The function returns ``(0, 0)`` in this case."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2275
msgid "This option causes child processes to be reported if they have been continued from a job control stop since their status was last reported."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2278
msgid "Availability: Some Unix systems."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2285
msgid "This option causes child processes to be reported if they have been stopped but their current state has not been reported since they were stopped."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2292
msgid "The following functions take a process status code as returned by :func:`system`, :func:`wait`, or :func:`waitpid` as a parameter.  They may be used to determine the disposition of a process."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2299
msgid "Return ``True`` if a core dump was generated for the process, otherwise return ``False``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2309
msgid "Return ``True`` if the process has been continued from a job control stop, otherwise return ``False``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2319
msgid "Return ``True`` if the process has been stopped, otherwise return ``False``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2327
msgid "Return ``True`` if the process exited due to a signal, otherwise return ``False``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2335
msgid "Return ``True`` if the process exited using the :manpage:`exit(2)` system call, otherwise return ``False``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2343
msgid "If ``WIFEXITED(status)`` is true, return the integer parameter to the :manpage:`exit(2)` system call.  Otherwise, the return value is meaningless."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2351
msgid "Return the signal which caused the process to stop."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2358
msgid "Return the signal which caused the process to exit."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2366
msgid "Miscellaneous System Information"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2371
msgid "Return string-valued system configuration values. *name* specifies the configuration value to retrieve; it may be a string which is the name of a defined system value; these names are specified in a number of standards (POSIX, Unix 95, Unix 98, and others).  Some platforms define additional names as well. The names known to the host operating system are given as the keys of the ``confstr_names`` dictionary.  For configuration variables not included in that mapping, passing an integer for *name* is also accepted."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2379
msgid "If the configuration value specified by *name* isn't defined, ``None`` is returned."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2382
msgid "If *name* is a string and is not known, :exc:`ValueError` is raised.  If a specific value for *name* is not supported by the host system, even if it is included in ``confstr_names``, an :exc:`OSError` is raised with :const:`errno.EINVAL` for the error number."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2387
msgid "Availability: Unix"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2392
msgid "Dictionary mapping names accepted by :func:`confstr` to the integer values defined for those names by the host operating system. This can be used to determine the set of names known to the system."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2401
msgid "Return the number of processes in the system run queue averaged over the last 1, 5, and 15 minutes or raises :exc:`OSError` if the load average was unobtainable."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2412
msgid "Return integer-valued system configuration values. If the configuration value specified by *name* isn't defined, ``-1`` is returned.  The comments regarding the *name* parameter for :func:`confstr` apply here as well; the dictionary that provides information on the known names is given by ``sysconf_names``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2422
msgid "Dictionary mapping names accepted by :func:`sysconf` to the integer values defined for those names by the host operating system. This can be used to determine the set of names known to the system."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2428
msgid "The following data values are used to support path manipulation operations.  These are defined for all platforms."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2431
msgid "Higher-level operations on pathnames are defined in the :mod:`os.path` module."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2436
msgid "The constant string used by the operating system to refer to the current directory. This is ``'.'`` for Windows and POSIX. Also available via :mod:`os.path`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2443
msgid "The constant string used by the operating system to refer to the parent directory. This is ``'..'`` for Windows and POSIX. Also available via :mod:`os.path`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2450
msgid "The character used by the operating system to separate pathname components. This is ``'/'`` for POSIX and ``'\\\\'`` for Windows.  Note that knowing this is not sufficient to be able to parse or concatenate pathnames --- use :func:`os.path.split` and :func:`os.path.join` --- but it is occasionally useful. Also available via :mod:`os.path`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2459
msgid "An alternative character used by the operating system to separate pathname components, or ``None`` if only one separator character exists.  This is set to ``'/'`` on Windows systems where ``sep`` is a backslash. Also available via :mod:`os.path`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2467
msgid "The character which separates the base filename from the extension; for example, the ``'.'`` in :file:`os.py`. Also available via :mod:`os.path`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2475
msgid "The character conventionally used by the operating system to separate search path components (as in :envvar:`PATH`), such as ``':'`` for POSIX or ``';'`` for Windows. Also available via :mod:`os.path`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2482
msgid "The default search path used by :func:`exec\\*p\\* <execl>` and :func:`spawn\\*p\\* <spawnl>` if the environment doesn't have a ``'PATH'`` key. Also available via :mod:`os.path`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2489
msgid "The string used to separate (or, rather, terminate) lines on the current platform.  This may be a single character, such as ``'\\n'`` for POSIX, or multiple characters, for example, ``'\\r\\n'`` for Windows. Do not use *os.linesep* as a line terminator when writing files opened in text mode (the default); use a single ``'\\n'`` instead, on all platforms."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2498
msgid "The file path of the null device. For example: ``'/dev/null'`` for POSIX, ``'nul'`` for Windows.  Also available via :mod:`os.path`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2507
msgid "Miscellaneous Functions"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2512
msgid "Return a string of *n* random bytes suitable for cryptographic use."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2514
msgid "This function returns random bytes from an OS-specific randomness source.  The returned data should be unpredictable enough for cryptographic applications, though its exact quality depends on the OS implementation.  On a UNIX-like system this will query ``/dev/urandom``, and on Windows it will use ``CryptGenRandom()``.  If a randomness source is not found, :exc:`NotImplementedError` will be raised."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/os.rst:2521
msgid "For an easy-to-use interface to the random number generator provided by your platform, please see :class:`random.SystemRandom`."
msgstr ""
