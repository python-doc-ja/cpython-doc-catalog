# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../library/sunau.rst:2
msgid ":mod:`sunau` --- Read and write Sun AU files"
msgstr ""

#: ../../library/sunau.rst:8
msgid "**Source code:** :source:`Lib/sunau.py`"
msgstr ""

#: ../../library/sunau.rst:12
msgid "The :mod:`sunau` module provides a convenient interface to the Sun AU sound format.  Note that this module is interface-compatible with the modules :mod:`aifc` and :mod:`wave`."
msgstr ""

#: ../../library/sunau.rst:16
msgid "An audio file consists of a header followed by the data.  The fields of the header are:"
msgstr ""

#: ../../library/sunau.rst:20
msgid "Field"
msgstr ""

#: ../../library/sunau.rst:20
msgid "Contents"
msgstr ""

#: ../../library/sunau.rst:22
msgid "magic word"
msgstr ""

#: ../../library/sunau.rst:22
msgid "The four bytes ``.snd``."
msgstr ""

#: ../../library/sunau.rst:24
msgid "header size"
msgstr ""

#: ../../library/sunau.rst:24
msgid "Size of the header, including info, in bytes."
msgstr ""

#: ../../library/sunau.rst:26
msgid "data size"
msgstr ""

#: ../../library/sunau.rst:26
msgid "Physical size of the data, in bytes."
msgstr ""

#: ../../library/sunau.rst:28
msgid "encoding"
msgstr ""

#: ../../library/sunau.rst:28
msgid "Indicates how the audio samples are encoded."
msgstr ""

#: ../../library/sunau.rst:30
msgid "sample rate"
msgstr ""

#: ../../library/sunau.rst:30
msgid "The sampling rate."
msgstr ""

#: ../../library/sunau.rst:32
msgid "# of channels"
msgstr ""

#: ../../library/sunau.rst:32
msgid "The number of channels in the samples."
msgstr ""

#: ../../library/sunau.rst:34
msgid "info"
msgstr ""

#: ../../library/sunau.rst:34
msgid "ASCII string giving a description of the audio file (padded with null bytes)."
msgstr ""

#: ../../library/sunau.rst:38
msgid "Apart from the info field, all header fields are 4 bytes in size. They are all 32-bit unsigned integers encoded in big-endian byte order."
msgstr ""

#: ../../library/sunau.rst:41
msgid "The :mod:`sunau` module defines the following functions:"
msgstr ""

#: ../../library/sunau.rst:46
msgid "If *file* is a string, open the file by that name, otherwise treat it as a seekable file-like object. *mode* can be any of"
msgstr ""

#: ../../library/sunau.rst:50
msgid "``'r'``"
msgstr ""

#: ../../library/sunau.rst:50
msgid "Read only mode."
msgstr ""

#: ../../library/sunau.rst:53
msgid "``'w'``"
msgstr ""

#: ../../library/sunau.rst:53
msgid "Write only mode."
msgstr ""

#: ../../library/sunau.rst:55
msgid "Note that it does not allow read/write files."
msgstr ""

#: ../../library/sunau.rst:57
msgid "A *mode* of ``'r'`` returns an :class:`AU_read` object, while a *mode* of ``'w'`` or ``'wb'`` returns an :class:`AU_write` object."
msgstr ""

#: ../../library/sunau.rst:63
msgid "A synonym for :func:`.open`, maintained for backwards compatibility."
msgstr ""

#: ../../library/sunau.rst:66
msgid "The :mod:`sunau` module defines the following exception:"
msgstr ""

#: ../../library/sunau.rst:70
msgid "An error raised when something is impossible because of Sun AU specs or implementation deficiency."
msgstr ""

#: ../../library/sunau.rst:74
msgid "The :mod:`sunau` module defines the following data items:"
msgstr ""

#: ../../library/sunau.rst:78
msgid "An integer every valid Sun AU file begins with, stored in big-endian form.  This is the string ``.snd`` interpreted as an integer."
msgstr ""

#: ../../library/sunau.rst:89
msgid "Values of the encoding field from the AU header which are supported by this module."
msgstr ""

#: ../../library/sunau.rst:100
msgid "Additional known values of the encoding field from the AU header, but which are not supported by this module."
msgstr ""

#: ../../library/sunau.rst:107
msgid "AU_read Objects"
msgstr ""

#: ../../library/sunau.rst:109
msgid "AU_read objects, as returned by :func:`.open` above, have the following methods:"
msgstr ""

#: ../../library/sunau.rst:114
msgid "Close the stream, and make the instance unusable. (This is  called automatically on deletion.)"
msgstr ""

#: ../../library/sunau.rst:120
msgid "Returns number of audio channels (1 for mono, 2 for stereo)."
msgstr ""

#: ../../library/sunau.rst:125
msgid "Returns sample width in bytes."
msgstr ""

#: ../../library/sunau.rst:130
msgid "Returns sampling frequency."
msgstr ""

#: ../../library/sunau.rst:135
msgid "Returns number of audio frames."
msgstr ""

#: ../../library/sunau.rst:140
msgid "Returns compression type. Supported compression types are ``'ULAW'``, ``'ALAW'`` and ``'NONE'``."
msgstr ""

#: ../../library/sunau.rst:146
msgid "Human-readable version of :meth:`getcomptype`.  The supported types have the respective names ``'CCITT G.711 u-law'``, ``'CCITT G.711 A-law'`` and ``'not compressed'``."
msgstr ""

#: ../../library/sunau.rst:153
msgid "Returns a tuple ``(nchannels, sampwidth, framerate, nframes, comptype, compname)``, equivalent to output of the :meth:`get\\*` methods."
msgstr ""

#: ../../library/sunau.rst:159
msgid "Reads and returns at most *n* frames of audio, as a string of bytes.  The data will be returned in linear format.  If the original data is in u-LAW format, it will be converted."
msgstr ""

#: ../../library/sunau.rst:166
msgid "Rewind the file pointer to the beginning of the audio stream."
msgstr ""

#: ../../library/sunau.rst:168
msgid "The following two methods define a term \"position\" which is compatible between them, and is otherwise implementation dependent."
msgstr ""

#: ../../library/sunau.rst:174
msgid "Set the file pointer to the specified position.  Only values returned from :meth:`tell` should be used for *pos*."
msgstr ""

#: ../../library/sunau.rst:180
msgid "Return current file pointer position.  Note that the returned value has nothing to do with the actual position in the file."
msgstr ""

#: ../../library/sunau.rst:183
msgid "The following two functions are defined for compatibility with the  :mod:`aifc`, and don't do anything interesting."
msgstr ""

#: ../../library/sunau.rst:189
msgid "Returns ``None``."
msgstr ""

#: ../../library/sunau.rst:194
msgid "Raise an error."
msgstr ""

#: ../../library/sunau.rst:200
msgid "AU_write Objects"
msgstr ""

#: ../../library/sunau.rst:202
msgid "AU_write objects, as returned by :func:`.open` above, have the following methods:"
msgstr ""

#: ../../library/sunau.rst:207
msgid "Set the number of channels."
msgstr ""

#: ../../library/sunau.rst:212
msgid "Set the sample width (in bytes.)"
msgstr ""

#: ../../library/sunau.rst:217
msgid "Set the frame rate."
msgstr ""

#: ../../library/sunau.rst:222
msgid "Set the number of frames. This can be later changed, when and if more  frames are written."
msgstr ""

#: ../../library/sunau.rst:228
msgid "Set the compression type and description. Only ``'NONE'`` and ``'ULAW'`` are supported on output."
msgstr ""

#: ../../library/sunau.rst:234
msgid "The *tuple* should be ``(nchannels, sampwidth, framerate, nframes, comptype, compname)``, with values valid for the :meth:`set\\*` methods.  Set all parameters."
msgstr ""

#: ../../library/sunau.rst:241
msgid "Return current position in the file, with the same disclaimer for the :meth:`AU_read.tell` and :meth:`AU_read.setpos` methods."
msgstr ""

#: ../../library/sunau.rst:247
msgid "Write audio frames, without correcting *nframes*."
msgstr ""

#: ../../library/sunau.rst:252
msgid "Write audio frames and make sure *nframes* is correct."
msgstr ""

#: ../../library/sunau.rst:257
msgid "Make sure *nframes* is correct, and close the file."
msgstr ""

#: ../../library/sunau.rst:259
msgid "This method is called upon deletion."
msgstr ""

#: ../../library/sunau.rst:261
msgid "Note that it is invalid to set any parameters after calling  :meth:`writeframes` or :meth:`writeframesraw`."
msgstr ""
