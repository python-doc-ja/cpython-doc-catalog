# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-01 18:32+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:2
msgid ":mod:`gdbm` --- GNU's reinterpretation of dbm"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:9
msgid "The :mod:`gdbm` module has been renamed to :mod:`dbm.gnu` in Python 3.  The :term:`2to3` tool will automatically adapt imports when converting your sources to Python 3."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:16
msgid "This module is quite similar to the :mod:`dbm` module, but uses ``gdbm`` instead to provide some additional functionality.  Please note that the file formats created by ``gdbm`` and ``dbm`` are incompatible."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:20
msgid "The :mod:`gdbm` module provides an interface to the GNU DBM library.  ``gdbm`` objects behave like mappings (dictionaries), except that keys and values are always strings. Printing a ``gdbm`` object doesn't print the keys and values, and the :meth:`items` and :meth:`values` methods are not supported."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:25
msgid "The module defines the following constant and functions:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:30
msgid "Raised on ``gdbm``\\ -specific errors, such as I/O errors. :exc:`KeyError` is raised for general mapping errors like specifying an incorrect key."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:36
msgid "Open a ``gdbm`` database and return a ``gdbm`` object.  The *filename* argument is the name of the database file."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:39
msgid "The optional *flag* argument can be:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:42
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:61
msgid "Value"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:42
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:61
msgid "Meaning"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:44
msgid "``'r'``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:44
msgid "Open existing database for reading only (default)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:47
msgid "``'w'``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:47
msgid "Open existing database for reading and writing"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:50
msgid "``'c'``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:50
msgid "Open database for reading and writing, creating it if it doesn't exist"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:53
msgid "``'n'``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:53
msgid "Always create a new, empty database, open for reading and writing"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:57
msgid "The following additional characters may be appended to the flag to control how the database is opened:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:63
msgid "``'f'``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:63
msgid "Open the database in fast mode.  Writes to the database will not be synchronized."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:66
msgid "``'s'``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:66
msgid "Synchronized mode. This will cause changes to the database to be immediately written to the file."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:70
msgid "``'u'``"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:70
msgid "Do not lock database."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:73
msgid "Not all flags are valid for all versions of ``gdbm``.  The module constant :const:`open_flags` is a string of supported flag characters.  The exception :exc:`error` is raised if an invalid flag is specified."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:77
msgid "The optional *mode* argument is the Unix mode of the file, used only when the database has to be created.  It defaults to octal ``0666``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:80
msgid "In addition to the dictionary-like methods, ``gdbm`` objects have the following methods:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:86
msgid "It's possible to loop over every key in the database using this method  and the :meth:`nextkey` method.  The traversal is ordered by ``gdbm``'s internal hash values, and won't be sorted by the key values.  This method returns the starting key."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:94
msgid "Returns the key that follows *key* in the traversal.  The following code prints every key in the database ``db``, without having to create a list in memory that contains them all::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:106
msgid "If you have carried out a lot of deletions and would like to shrink the space used by the ``gdbm`` file, this routine will reorganize the database.  ``gdbm`` will not shorten the length of a database file except by using this reorganization; otherwise, deleted file space will be kept and reused as new (key, value) pairs are added."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:115
msgid "When the database has been opened in fast mode, this method forces any unwritten data to be written to the disk."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:121
msgid "Close the ``gdbm`` database."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:127
msgid "Module :mod:`anydbm`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:127
msgid "Generic interface to ``dbm``\\ -style databases."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:129
msgid "Module :mod:`whichdb`"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/gdbm.rst:130
msgid "Utility module used to determine the type of an existing database."
msgstr ""
