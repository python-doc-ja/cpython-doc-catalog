# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2018, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-01-21 01:52+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../library/posixfile.rst:2
msgid ":mod:`posixfile` --- File-like objects with locking support"
msgstr ""

#: ../../library/posixfile.rst:14
msgid "The locking operation that this module provides is done better and more portably by the :func:`fcntl.lockf` call."
msgstr ""

#: ../../library/posixfile.rst:20
msgid "This module implements some additional functionality over the built-in file objects.  In particular, it implements file locking, control over the file flags, and an easy interface to duplicate the file object. The module defines a new file object, the posixfile object.  It has all the standard file object methods and adds the methods described below.  This module only works for certain flavors of Unix, since it uses :func:`fcntl.fcntl` for file locking."
msgstr ""

#: ../../library/posixfile.rst:27
msgid "To instantiate a posixfile object, use the :func:`posixfile.open` function.  The resulting object looks and feels roughly the same as a standard file object."
msgstr ""

#: ../../library/posixfile.rst:30
msgid "The :mod:`posixfile` module defines the following constants:"
msgstr ""

#: ../../library/posixfile.rst:35
msgid "Offset is calculated from the start of the file."
msgstr ""

#: ../../library/posixfile.rst:40
msgid "Offset is calculated from the current position in the file."
msgstr ""

#: ../../library/posixfile.rst:45
msgid "Offset is calculated from the end of the file."
msgstr ""

#: ../../library/posixfile.rst:47
msgid "The :mod:`posixfile` module defines the following functions:"
msgstr ""

#: ../../library/posixfile.rst:52
msgid "Create a new posixfile object with the given filename and mode.  The *filename*, *mode* and *bufsize* arguments are interpreted the same way as by the built-in :func:`open` function."
msgstr ""

#: ../../library/posixfile.rst:59
msgid "Create a new posixfile object with the given standard file object. The resulting object has the same filename and mode as the original file object."
msgstr ""

#: ../../library/posixfile.rst:62
msgid "The posixfile object defines the following additional methods:"
msgstr ""

#: ../../library/posixfile.rst:67
msgid "Lock the specified section of the file that the file object is referring to. The format is explained below in a table.  The *len* argument specifies the length of the section that should be locked. The default is ``0``. *start* specifies the starting offset of the section, where the default is ``0``.  The *whence* argument specifies where the offset is relative to. It accepts one of the constants :const:`SEEK_SET`, :const:`SEEK_CUR` or :const:`SEEK_END`.  The default is :const:`SEEK_SET`.  For more information about the arguments refer to the :manpage:`fcntl(2)` manual page on your system."
msgstr ""

#: ../../library/posixfile.rst:79
msgid "Set the specified flags for the file that the file object is referring to.  The new flags are ORed with the old flags, unless specified otherwise.  The format is explained below in a table.  Without the *flags* argument a string indicating the current flags is returned (this is the same as the ``?`` modifier).  For more information about the flags refer to the :manpage:`fcntl(2)` manual page on your system."
msgstr ""

#: ../../library/posixfile.rst:89
msgid "Duplicate the file object and the underlying file pointer and file descriptor. The resulting object behaves as if it were newly opened."
msgstr ""

#: ../../library/posixfile.rst:95
msgid "Duplicate the file object and the underlying file pointer and file descriptor. The new object will have the given file descriptor. Otherwise the resulting object behaves as if it were newly opened."
msgstr ""

#: ../../library/posixfile.rst:102
msgid "Return the standard file object that the posixfile object is based on.  This is sometimes necessary for functions that insist on a standard file object."
msgstr ""

#: ../../library/posixfile.rst:105
msgid "All methods raise :exc:`IOError` when the request fails."
msgstr ""

#: ../../library/posixfile.rst:107
msgid "Format characters for the :meth:`lock` method have the following meaning:"
msgstr ""

#: ../../library/posixfile.rst:110
#: ../../library/posixfile.rst:144
msgid "Format"
msgstr ""

#: ../../library/posixfile.rst:110
#: ../../library/posixfile.rst:123
#: ../../library/posixfile.rst:144
#: ../../library/posixfile.rst:158
msgid "Meaning"
msgstr ""

#: ../../library/posixfile.rst:112
msgid "``u``"
msgstr ""

#: ../../library/posixfile.rst:112
msgid "unlock the specified region"
msgstr ""

#: ../../library/posixfile.rst:114
msgid "``r``"
msgstr ""

#: ../../library/posixfile.rst:114
msgid "request a read lock for the specified section"
msgstr ""

#: ../../library/posixfile.rst:116
msgid "``w``"
msgstr ""

#: ../../library/posixfile.rst:116
msgid "request a write lock for the specified section"
msgstr ""

#: ../../library/posixfile.rst:120
#: ../../library/posixfile.rst:155
msgid "In addition the following modifiers can be added to the format:"
msgstr ""

#: ../../library/posixfile.rst:123
#: ../../library/posixfile.rst:158
msgid "Modifier"
msgstr ""

#: ../../library/posixfile.rst:123
#: ../../library/posixfile.rst:158
msgid "Notes"
msgstr ""

#: ../../library/posixfile.rst:125
msgid "``|``"
msgstr ""

#: ../../library/posixfile.rst:125
msgid "wait until the lock has been granted"
msgstr ""

#: ../../library/posixfile.rst:128
#: ../../library/posixfile.rst:166
msgid "``?``"
msgstr ""

#: ../../library/posixfile.rst:128
msgid "return the first lock conflicting with the requested lock, or ``None`` if there is no conflict."
msgstr ""

#: ../../library/posixfile.rst:128
#: ../../library/posixfile.rst:160
#: ../../library/posixfile.rst:163
msgid "\\(1)"
msgstr ""

#: ../../library/posixfile.rst:134
msgid "Note:"
msgstr ""

#: ../../library/posixfile.rst:137
msgid "The lock returned is in the format ``(mode, len, start, whence, pid)`` where *mode* is a character representing the type of lock ('r' or 'w').  This modifier prevents a request from being granted; it is for query purposes only."
msgstr ""

#: ../../library/posixfile.rst:141
msgid "Format characters for the :meth:`flags` method have the following meanings:"
msgstr ""

#: ../../library/posixfile.rst:146
msgid "``a``"
msgstr ""

#: ../../library/posixfile.rst:146
msgid "append only flag"
msgstr ""

#: ../../library/posixfile.rst:148
msgid "``c``"
msgstr ""

#: ../../library/posixfile.rst:148
msgid "close on exec flag"
msgstr ""

#: ../../library/posixfile.rst:150
msgid "``n``"
msgstr ""

#: ../../library/posixfile.rst:150
msgid "no delay flag (also called non-blocking flag)"
msgstr ""

#: ../../library/posixfile.rst:152
msgid "``s``"
msgstr ""

#: ../../library/posixfile.rst:152
msgid "synchronization flag"
msgstr ""

#: ../../library/posixfile.rst:160
msgid "``!``"
msgstr ""

#: ../../library/posixfile.rst:160
msgid "turn the specified flags 'off', instead of the default 'on'"
msgstr ""

#: ../../library/posixfile.rst:163
msgid "``=``"
msgstr ""

#: ../../library/posixfile.rst:163
msgid "replace the flags, instead of the default 'OR' operation"
msgstr ""

#: ../../library/posixfile.rst:166
msgid "return a string in which the characters represent the flags that are set."
msgstr ""

#: ../../library/posixfile.rst:166
msgid "\\(2)"
msgstr ""

#: ../../library/posixfile.rst:171
msgid "Notes:"
msgstr ""

#: ../../library/posixfile.rst:174
msgid "The ``!`` and ``=`` modifiers are mutually exclusive."
msgstr ""

#: ../../library/posixfile.rst:177
msgid "This string represents the flags after they may have been altered by the same call."
msgstr ""

#: ../../library/posixfile.rst:180
msgid "Examples::"
msgstr ""

